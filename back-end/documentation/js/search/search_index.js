var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.181,1,1.949]],["body/controllers/AppController.html",[0,2.055,1,3.391,2,1.731,3,0.433,4,0.433,5,0.368,6,3.74,7,0.811,8,0.035,9,0.9,10,0.433,11,0.187,12,2.302,13,0.025,14,0.03,15,0.025]],["title/modules/AppModule.html",[16,0.985,17,1.949]],["body/modules/AppModule.html",[1,3.111,2,1.673,3,0.313,4,0.313,5,0.265,7,1.034,8,0.035,9,0.65,10,0.313,11,0.135,13,0.018,14,0.024,15,0.018,16,1.573,17,3.845,18,1.371,19,1.507,20,1.844,21,1.844,22,1.507,23,2.508,24,1.662,25,2.701,26,2.701,27,2.701,28,3.188,29,3.188,30,2.874,31,3.188,32,2.468,33,1.844,34,1.844,35,3.256,36,2.468,37,3.256,38,2.701,39,3.256,40,3.256,41,3.256,42,2.701,43,2.701,44,3.256,45,3.256]],["title/injectables/AppService.html",[31,1.742,46,0.82]],["body/injectables/AppService.html",[3,0.404,4,0.404,5,0.343,7,0.758,8,0.035,9,0.84,10,0.404,11,0.174,13,0.024,14,0.029,15,0.024,31,2.91,46,1.37,47,1.949,48,3.493,49,0.606,50,1.972,51,5.775,52,1.022,53,4.211,54,1.616,55,1.37,56,1.476,57,4.211,58,4.211]],["title/controllers/AuthController.html",[0,1.181,59,1.949]],["body/controllers/AuthController.html",[0,1.412,2,1.412,3,0.353,4,0.353,5,0.3,7,0.938,8,0.035,9,0.734,10,0.353,11,0.152,13,0.021,14,0.026,15,0.021,49,0.529,50,1.813,52,0.893,54,1.412,56,1.289,59,2.99,60,3.052,61,2.639,62,3.679,63,2.002,64,1.988,65,3.679,66,2.694,67,2.639,68,3.303,69,3.679,70,1.549,71,0.893,72,0.662,73,1.178,74,3.052,75,2.33,76,2.195,77,2.33,78,3.679,79,2.083,80,3.679,81,1.412,82,3.679]],["title/modules/AuthModule.html",[16,0.985,28,1.742]],["body/modules/AuthModule.html",[2,1.595,3,0.291,4,0.291,5,0.247,7,1.034,8,0.036,9,0.605,10,0.291,11,0.126,13,0.017,14,0.023,15,0.017,16,1.517,18,1.277,19,1.404,20,1.718,21,1.718,22,1.404,23,2.419,24,2.121,28,3.4,30,2.815,32,2.353,33,1.718,34,1.718,36,2.353,38,2.516,59,3.001,76,2.321,77,1.921,83,2.516,84,3.033,85,2.516,86,2.882,87,3.122,88,2.175,89,3.033,90,3.033,91,2.175,92,3.655,93,1.549,94,3.033,95,3.033,96,1.549,97,2.516,98,2.175,99,3.033,100,2.175,101,2.175,102,3.033,103,2.516,104,3.033]],["title/injectables/AuthService.html",[46,0.82,76,1.295]],["body/injectables/AuthService.html",[3,0.193,4,0.193,5,0.164,7,0.814,8,0.036,9,0.4,10,0.193,11,0.083,12,1.571,13,0.011,14,0.017,15,0.011,46,0.82,47,0.928,49,0.289,50,1.181,52,1.018,54,1.436,56,1.311,63,1.832,64,1.295,66,1.941,70,1.766,71,1.098,72,0.755,73,1.343,74,1.664,76,1.295,81,1.436,91,1.439,96,2.309,100,1.439,101,1.439,103,2.552,105,1.664,106,3.076,107,3.076,108,3.076,109,2.006,110,1.941,111,4.969,112,2.006,113,3.076,114,3.076,115,2.006,116,3.423,117,3.023,118,3.479,119,3.076,120,3.076,121,3.076,122,3.076,123,3.479,124,3.244,125,3.479,126,3.076,127,3.008,128,1.673,129,1.136,130,3.076,131,3.076,132,2.006,133,3.076,134,3.076,135,3.076,136,2.206,137,3.076,138,2.552,139,4.773,140,3.479,141,2.552,142,3.076,143,3.076,144,3.076,145,2.006,146,2.552,147,1.575,148,3.076,149,3.076,150,2.206,151,2.006,152,2.683,153,2.206,154,2.006,155,2.206,156,3.076,157,2.006,158,2.006,159,3.076,160,2.006,161,2.006,162,2.006,163,1.024,164,2.006,165,1.948,166,1.424,167,3.076,168,1.136,169,2.006,170,2.006,171,2.006,172,1.439,173,3.076,174,1.742,175,2.006,176,1.664,177,2.006,178,2.006]],["title/classes/CreateImovelDto.html",[11,0.127,179,1.571]],["body/classes/CreateImovelDto.html",[3,0.271,4,0.271,5,0.23,8,0.034,10,0.38,11,0.164,13,0.016,14,0.022,15,0.016,49,0.406,52,1.426,55,1.677,72,1.058,73,1.582,129,3.25,179,2.018,180,1.441,181,2.025,182,1.664,183,3.13,184,3.13,185,3.13,186,3.13,187,3.13,188,3.13,189,3.13,190,3.13,191,3.13,192,3.13,193,3.13,194,2.823,195,2.823,196,2.823,197,2.823,198,2.823,199,2.823,200,2.823,201,2.823,202,2.823,203,2.823,204,2.823,205,1.441,206,1.788,207,1.788,208,1.788,209,1.788,210,1.599,211,1.189]],["title/classes/CreateUserDto.html",[11,0.127,212,1.424]],["body/classes/CreateUserDto.html",[3,0.34,4,0.34,5,0.288,8,0.035,10,0.492,11,0.212,13,0.02,14,0.026,15,0.02,49,0.509,52,1.364,55,1.647,64,2.282,66,1.638,71,1.316,72,1.011,147,2.366,180,1.807,182,1.939,211,1.939,212,2.131,213,2.241,214,2.899,215,2.768,216,3.539,217,3.539,218,3.539,219,3.539,220,3.539,221,2.131,222,1.807]],["title/modules/DatabaseModule.html",[16,0.985,223,1.571]],["body/modules/DatabaseModule.html",[3,0.416,4,0.416,5,0.353,7,0.941,8,0.035,9,0.865,10,0.416,11,0.18,13,0.024,14,0.029,15,0.024,16,1.674,18,1.826,23,2.214,24,2.214,36,2.456,223,2.671,224,4.336,225,4.029,226,4.336]],["title/injectables/DefaultStrategy.html",[46,0.82,86,1.571]],["body/injectables/DefaultStrategy.html",[3,0.32,4,0.32,5,0.271,7,0.953,8,0.036,9,0.665,10,0.32,11,0.138,12,1.7,13,0.019,14,0.025,15,0.019,46,1.179,47,1.541,49,0.479,50,1.699,52,1.074,54,1.278,56,1.167,63,1.907,70,1.863,71,1.074,72,0.796,73,1.416,76,2.385,77,2.109,79,1.886,81,1.278,86,2.259,93,1.7,96,1.7,98,2.389,101,2.389,124,2.389,128,1.741,152,3.173,163,1.7,165,2.109,166,1.541,174,1.886,227,2.763,228,3.67,229,2.763,230,3.331,231,3.67,232,3.331,233,2.763,234,2.763,235,2.763,236,2.389,237,2.109,238,2.763,239,2.763,240,2.763,241,2.763,242,2.763,243,2.763,244,2.763]],["title/interfaces/Imovel.html",[245,1.742,246,1.571]],["body/interfaces/Imovel.html",[3,0.258,4,0.258,5,0.219,7,0.483,8,0.035,10,0.258,13,0.015,14,0.021,15,0.015,49,0.386,55,1.688,72,1.087,73,1.697,129,3.212,182,1.605,183,3.059,184,3.059,185,3.059,186,3.059,187,3.059,188,3.059,189,3.059,190,3.059,191,3.059,192,3.059,193,3.059,206,3.059,207,3.059,208,3.059,209,3.059,210,2.736,211,1.867,237,2.414,245,1.519,246,1.946,247,1.923,248,2.225,249,3.679,250,1.519]],["title/controllers/ImovelController.html",[0,1.181,251,1.949]],["body/controllers/ImovelController.html",[0,0.959,2,0.959,3,0.24,4,0.24,5,0.204,7,0.841,8,0.036,9,0.499,10,0.24,11,0.103,13,0.014,14,0.02,15,0.014,49,0.359,50,1.391,52,1.205,54,1.905,55,1.486,56,1.74,61,1.792,63,2.281,67,3.56,68,2.294,70,1.968,71,1.135,72,0.841,73,1.497,75,2.294,79,1.415,81,1.905,93,1.275,136,1.792,168,2.932,179,2.387,205,2.387,221,1.156,246,1.275,251,2.294,252,2.072,253,2.961,254,3.057,255,2.932,256,2.498,257,2.498,258,2.072,259,2.072,260,2.498,261,1.792,262,2.072,263,2.498,264,2.072,265,2.072,266,2.498,267,2.072,268,2.072,269,2.498,270,2.072,271,2.176,272,2.072,273,2.072,274,1.792,275,2.072,276,2.498,277,3.005,278,2.072,279,2.498,280,2.498,281,2.498,282,3.536,283,2.072,284,2.498,285,2.072,286,2.498,287,2.498,288,2.072,289,2.072,290,2.498]],["title/classes/ImovelDto.html",[11,0.127,205,1.571]],["body/classes/ImovelDto.html",[3,0.245,4,0.245,5,0.208,8,0.034,10,0.353,11,0.152,13,0.014,14,0.021,15,0.014,49,0.366,52,1.455,55,1.674,72,1.079,73,1.76,129,3.173,179,1.301,180,1.301,181,1.827,182,1.547,183,2.988,184,2.988,185,2.988,186,2.988,187,2.988,188,2.988,189,2.988,190,2.988,191,2.988,192,2.988,193,2.988,205,1.876,206,2.73,207,2.73,208,2.73,209,2.73,210,2.441,211,1.547,291,2.548,292,2.548,293,2.548,294,2.548,295,2.548,296,2.548,297,2.548,298,2.548,299,2.548,300,2.548,301,2.548,302,2.548,303,2.548,304,2.548,305,2.548,306,2.548]],["title/modules/ImovelModule.html",[16,0.985,29,1.742]],["body/modules/ImovelModule.html",[2,1.736,3,0.331,4,0.331,5,0.281,7,1.002,8,0.035,9,0.687,10,0.331,11,0.143,13,0.019,14,0.025,15,0.019,16,1.617,18,1.449,19,1.593,20,1.95,21,1.95,22,1.593,23,2.579,24,2.579,29,3.388,32,2.561,33,1.95,34,1.95,36,2.561,223,2.92,251,3.199,271,3.126,272,2.856,307,2.856,308,2.856,309,2.856,310,2.856,311,3.443,312,3.443,313,2.856,314,3.244,315,3.443]],["title/injectables/ImovelService.html",[46,0.82,271,1.571]],["body/injectables/ImovelService.html",[3,0.204,4,0.204,5,0.173,7,0.778,8,0.036,9,0.425,10,0.204,11,0.088,12,1.086,13,0.012,14,0.018,15,0.012,46,0.857,47,0.985,49,0.306,50,1.235,52,1.185,54,1.782,55,1.425,56,1.627,63,2.219,70,1.955,71,1.127,72,0.835,73,1.486,81,1.782,116,3.907,117,3.45,155,1.526,163,1.086,166,1.489,168,3.027,179,2.37,205,2.666,221,0.985,246,1.086,250,1.205,253,2.037,254,2.307,255,1.822,261,2.307,264,2.668,267,2.668,270,1.765,271,1.642,316,1.765,317,2.128,318,3.586,319,2.128,320,3.217,321,2.128,322,3.586,323,3.217,324,3.217,325,3.217,326,3.745,327,3.217,328,2.128,329,2.668,330,4.331,331,5.222,332,2.128,333,2.307,334,3.502,335,2.128,336,2.128,337,2.668,338,2.128,339,1.526,340,2.128,341,2.128,342,2.128,343,2.128,344,1.765,345,1.348,346,1.526,347,2.128,348,2.128]],["title/classes/LoginUserDto.html",[11,0.127,66,1.424]],["body/classes/LoginUserDto.html",[3,0.361,4,0.361,5,0.307,8,0.034,10,0.506,11,0.218,13,0.021,14,0.027,15,0.021,49,0.541,52,1.162,55,1.644,64,2.016,66,2.216,71,1.162,72,0.862,147,2.412,180,1.92,182,2.016,211,1.583,212,1.74,213,2.381,214,2.13,215,2.832,221,2.71,222,1.92,349,3.761,350,3.761]],["title/injectables/MasterStrategy.html",[46,0.82,87,1.742]],["body/injectables/MasterStrategy.html",[3,0.32,4,0.32,5,0.271,7,0.953,8,0.036,9,0.665,10,0.32,11,0.138,12,1.7,13,0.019,14,0.025,15,0.019,46,1.179,47,1.541,49,0.479,50,1.699,52,1.074,54,1.278,56,1.167,63,1.907,70,1.863,71,1.074,72,0.796,73,1.416,76,2.385,77,2.109,79,1.886,81,1.278,87,2.506,93,1.7,96,1.7,124,2.389,128,1.741,152,3.173,163,1.7,165,2.109,166,1.541,172,2.389,174,1.886,176,2.763,228,3.67,229,2.763,231,3.67,233,2.763,234,2.763,235,2.763,236,2.389,237,2.109,238,2.763,239,2.763,240,2.763,241,2.763,242,2.763,243,2.763,244,2.763,351,2.763,352,3.331,353,3.331]],["title/interfaces/User.html",[128,1.078,245,1.742]],["body/interfaces/User.html",[3,0.345,4,0.345,5,0.293,7,0.646,8,0.035,10,0.345,13,0.02,14,0.026,15,0.02,49,0.516,55,1.664,64,2.295,71,1.323,72,1.041,128,1.628,147,2.295,182,1.956,206,3.452,211,2.169,214,3.087,215,2.783,237,2.943,245,2.032,247,2.574,249,4.275,250,2.032,354,2.977]],["title/controllers/UserController.html",[0,1.181,355,1.949]],["body/controllers/UserController.html",[0,0.931,2,0.931,3,0.233,4,0.233,5,0.198,7,0.883,8,0.036,9,0.484,10,0.233,11,0.1,13,0.014,14,0.02,15,0.014,49,0.349,50,1.362,52,1.119,54,1.77,55,1.475,56,1.616,61,1.74,63,2.213,67,3.308,68,2.246,70,1.942,71,1.119,72,0.83,73,1.476,75,2.246,79,1.374,81,1.77,93,1.239,110,1.94,128,1.72,136,1.74,168,3.186,212,2.134,221,1.123,253,2.921,254,3.007,255,2.902,258,2.013,259,2.013,261,1.74,262,2.013,265,2.013,268,2.013,273,2.013,274,1.74,275,2.013,277,2.942,278,2.013,282,2.942,283,2.013,285,2.013,288,2.013,289,2.013,355,2.246,356,2.013,357,2.427,358,2.427,359,2.427,360,2.427,361,4.612,362,2.427,363,2.427,364,2.013,365,2.013,366,2.013,367,2.427,368,2.427,369,2.427,370,2.427,371,3.547,372,3.547,373,3.547,374,2.427,375,2.427,376,2.427,377,2.427]],["title/modules/UserModule.html",[16,0.985,30,1.571]],["body/modules/UserModule.html",[2,1.736,3,0.331,4,0.331,5,0.281,7,1.002,8,0.035,9,0.687,10,0.331,11,0.143,13,0.019,14,0.025,15,0.019,16,1.617,18,1.449,19,1.593,20,1.95,21,1.95,22,1.593,23,2.579,24,2.579,30,3.054,32,2.561,33,1.95,34,1.95,36,2.561,110,2.834,223,2.92,313,2.856,355,3.199,366,2.856,378,2.856,379,3.443,380,2.856,381,2.856,382,3.443,383,3.443,384,3.244,385,3.443]],["title/injectables/UserService.html",[46,0.82,110,1.424]],["body/injectables/UserService.html",[3,0.171,4,0.171,5,0.145,7,0.77,8,0.036,9,0.356,10,0.171,11,0.074,12,0.91,13,0.01,14,0.016,15,0.01,46,0.748,47,0.825,49,0.256,50,1.077,52,1.154,54,1.745,55,1.489,56,1.593,63,2.2,70,2.002,71,1.154,72,0.856,73,1.523,81,1.992,96,0.91,110,1.298,116,3.859,117,3.407,127,3.722,128,1.379,146,1.478,147,1.657,150,2.012,153,2.012,155,1.278,163,0.91,165,1.128,166,1.606,168,2.694,210,1.009,212,1.981,221,0.825,222,0.91,250,1.009,253,1.777,255,1.589,318,3.264,322,2.327,326,3.534,330,3.771,333,2.012,334,3.534,337,2.327,339,1.278,344,1.478,345,1.128,346,1.278,364,1.478,365,1.478,386,1.478,387,2.805,388,2.805,389,2.805,390,2.805,391,1.782,392,1.782,393,2.805,394,2.805,395,1.782,396,2.805,397,2.327,398,2.805,399,1.782,400,2.805,401,1.478,402,2.805,403,1.782,404,2.805,405,1.782,406,2.805,407,2.805,408,1.782,409,2.805,410,2.805,411,3.936,412,1.782,413,2.805,414,1.782,415,1.782,416,1.782,417,2.805,418,1.782,419,1.782,420,1.782,421,1.782,422,1.782,423,1.782,424,1.782,425,1.782,426,2.805,427,1.782,428,1.782,429,1.782,430,1.782,431,2.805,432,1.782,433,1.782]],["title/classes/Users.html",[11,0.127,222,1.571]],["body/classes/Users.html",[3,0.357,4,0.357,5,0.303,8,0.035,10,0.503,11,0.217,13,0.021,14,0.027,15,0.021,49,0.535,52,1.272,55,1.651,64,2.326,66,1.721,71,1.341,72,0.943,147,2.403,180,1.899,182,2.002,211,1.566,212,1.721,213,2.355,214,2.106,215,2.428,221,2.2,222,2.428,434,3.719,435,3.719,436,3.719]],["title/coverage.html",[437,3.48]],["body/coverage.html",[0,1.899,1,1.793,5,0.231,6,2.348,8,0.035,11,0.216,13,0.016,14,0.022,15,0.016,22,1.31,31,1.603,46,1.438,48,2.348,59,1.793,60,2.348,66,1.31,72,0.509,76,1.192,86,1.445,87,1.603,88,2.03,92,2.03,105,2.348,110,1.31,128,0.992,166,1.31,179,1.445,181,2.841,205,1.445,212,1.31,213,2.893,222,1.445,225,2.03,227,2.348,245,2.243,246,1.445,248,2.348,251,1.793,252,2.348,271,1.445,314,2.03,316,2.348,351,2.348,354,2.348,355,1.793,356,2.348,384,2.03,386,2.348,437,2.348,438,2.831,439,2.831,440,2.831,441,4.445,442,5.652,443,3.961,444,5.396,445,2.831,446,2.831,447,4.568,448,2.348,449,3.961,450,2.831,451,3.961,452,2.348,453,2.348,454,2.348,455,2.831,456,2.831,457,2.348,458,2.831,459,2.831,460,2.831,461,2.831,462,2.348,463,2.348,464,2.348,465,2.831,466,2.831,467,2.831,468,2.831]],["title/dependencies.html",[19,1.712,469,2.572]],["body/dependencies.html",[8,0.036,9,0.745,13,0.021,14,0.027,15,0.021,19,1.727,42,3.096,43,3.096,91,2.677,93,1.906,153,2.677,174,2.699,236,3.766,250,2.114,470,5.251,471,3.733,472,4.766,473,3.733,474,3.733,475,3.733,476,3.954,477,3.733,478,3.733,479,3.733,480,3.733,481,3.733,482,3.733,483,3.733,484,3.733,485,3.733,486,3.733,487,3.733,488,3.733,489,3.733,490,3.733,491,3.733,492,3.733,493,3.733,494,3.733,495,3.733,496,3.733,497,3.733,498,3.733,499,3.733]],["title/miscellaneous/functions.html",[500,1.628,501,3.069]],["body/miscellaneous/functions.html",[8,0.031,13,0.027,14,0.031,15,0.027,22,2.699,49,0.682,457,3.931,500,3.002,501,3.931,502,4.74]],["title/index.html",[49,0.37,503,2.572,504,2.572]],["body/index.html",[8,0.032,13,0.012,14,0.018,15,0.012,64,0.887,68,1.334,71,0.511,75,2.441,100,2.289,117,2.724,118,3.197,123,2.648,125,4.192,127,2.289,128,0.738,138,1.747,140,1.747,141,4.035,147,0.887,150,1.51,172,3.084,174,1.808,182,0.887,215,1.63,255,1.808,274,1.51,329,2.648,333,1.51,334,1.51,345,1.334,397,1.747,441,1.51,476,1.747,505,2.106,506,3.192,507,3.192,508,5.205,509,5.663,510,2.106,511,2.106,512,2.106,513,3.854,514,2.106,515,5.816,516,5.33,517,4.864,518,2.106,519,2.106,520,3.854,521,2.106,522,2.106,523,2.106,524,2.106,525,2.106,526,2.106,527,2.106,528,3.192,529,2.106,530,3.192,531,2.106,532,2.106,533,2.106,534,2.106,535,2.106,536,2.106,537,2.106,538,2.106,539,2.106,540,2.106,541,2.106,542,2.106,543,3.192,544,2.106,545,2.106,546,2.106,547,2.106,548,2.106,549,2.106,550,2.106,551,3.192,552,2.106,553,2.106,554,2.106,555,2.106,556,3.192,557,2.106,558,2.106,559,2.106,560,2.106,561,2.106,562,2.106,563,2.106,564,2.106,565,2.106,566,2.106,567,2.106,568,2.106,569,3.192,570,3.192,571,3.854,572,3.192,573,2.106,574,3.854,575,2.106,576,2.106,577,2.106,578,2.106,579,2.106,580,2.106,581,2.106,582,2.106,583,2.106,584,3.192,585,2.106,586,2.106,587,2.106,588,2.106,589,2.106,590,2.106,591,2.106,592,2.106,593,2.106,594,2.106,595,2.106,596,2.106,597,2.106,598,2.106,599,2.106,600,2.106,601,2.106,602,2.106,603,2.106,604,2.106,605,2.106,606,2.106,607,2.106,608,2.106,609,2.106,610,2.106,611,2.106,612,2.106,613,2.106,614,2.106,615,3.192,616,3.192,617,2.106,618,3.192,619,2.106,620,2.106,621,2.106,622,2.106,623,2.106,624,2.106,625,2.106,626,2.106,627,2.106,628,2.106,629,2.106,630,2.106,631,3.192,632,2.106,633,3.192,634,2.106,635,2.106,636,2.106,637,2.106,638,2.106,639,2.106,640,2.106]],["title/modules.html",[18,1.766]],["body/modules.html",[8,0.03,13,0.025,14,0.03,15,0.025,17,2.782,18,1.849,28,2.487,29,2.487,30,2.242,223,2.242,641,5.858,642,5.858,643,5.858,644,5.991,645,4.393,646,4.393]],["title/overview.html",[647,3.48]],["body/overview.html",[2,1.211,8,0.035,13,0.018,14,0.024,15,0.018,16,1.01,17,3.764,18,1.328,19,1.46,20,1.787,21,1.787,22,1.46,23,1.611,24,1.611,25,2.617,26,2.617,27,2.617,28,3.396,29,3.285,30,3.002,31,2.738,32,2.417,33,1.787,34,1.787,47,1.46,76,2.036,83,2.617,85,2.617,86,2.469,87,2.738,110,2.639,180,1.611,223,2.645,247,2.263,271,2.912,307,2.617,308,2.617,309,2.617,310,2.617,378,2.617,380,2.617,381,2.617,647,2.617,648,4.267,649,3.155,650,3.155,651,3.155]],["title/miscellaneous/variables.html",[500,1.628,652,3.069]],["body/miscellaneous/variables.html",[8,0.036,13,0.011,14,0.017,15,0.011,49,0.293,55,1.48,56,0.713,63,0.781,64,0.856,71,0.494,72,1.081,81,0.781,86,1.039,88,1.459,92,2.23,96,1.039,97,1.688,98,1.459,128,1.09,129,2.137,147,0.856,163,2.45,166,1.439,183,1.288,184,1.288,185,1.288,186,1.288,187,1.288,188,1.288,189,1.288,190,1.288,191,1.288,192,1.288,193,1.288,207,1.288,208,1.288,209,1.288,210,1.152,211,1.309,214,1.152,215,1.039,225,2.23,246,1.039,314,2.23,326,1.459,339,2.23,345,3.788,346,1.459,384,2.23,401,1.688,441,1.459,448,1.688,452,1.688,453,1.688,454,3.13,462,1.688,463,1.688,464,3.13,500,1.288,652,1.688,653,2.034,654,2.034,655,2.034,656,2.034,657,2.034,658,2.034,659,5.385,660,4.799,661,3.774,662,3.774,663,3.774,664,3.109,665,2.034,666,2.034,667,2.034,668,2.034,669,2.034,670,2.034,671,2.034,672,2.034,673,2.034,674,2.034,675,2.034,676,2.034,677,2.034,678,2.034,679,2.034,680,2.034,681,4.225,682,2.034,683,3.109,684,3.774,685,5.823,686,3.774,687,3.109,688,3.109,689,2.034,690,2.034]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateImovelDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DefaultStrategy.html":{},"interfaces/Imovel.html":{},"controllers/ImovelController.html":{},"classes/ImovelDto.html":{},"modules/ImovelModule.html":{},"injectables/ImovelService.html":{},"classes/LoginUserDto.html":{},"injectables/MasterStrategy.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":441,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":450,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["123456",{"_index":604,"title":{},"body":{"index.html":{}}}],["2",{"_index":651,"title":{},"body":{"overview.html":{}}}],["24h",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{}}}],["27018",{"_index":580,"title":{},"body":{"index.html":{}}}],["2b$10$tlqh.vtlyqufvx8ehpfyhegza2j6q1vv6u3m.jj7or../jlxjfppk",{"_index":593,"title":{},"body":{"index.html":{}}}],["3.0.0",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["3.0.3",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["30000",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3600",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["4",{"_index":649,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["4.6.1",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["450000",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":648,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["5.10.6",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["5/7",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":650,"title":{},"body":{"overview.html":{}}}],["6.5.4",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["6/8",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["7.0.0",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["7.0.2",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["71",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["__v",{"_index":594,"title":{},"body":{"index.html":{}}}],["_id",{"_index":206,"title":{},"body":{"classes/CreateImovelDto.html":{},"interfaces/Imovel.html":{},"classes/ImovelDto.html":{},"interfaces/User.html":{}}}],["accesstoken",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{}}}],["acessar",{"_index":624,"title":{},"body":{"index.html":{}}}],["add",{"_index":543,"title":{},"body":{"index.html":{}}}],["admininsira",{"_index":586,"title":{},"body":{"index.html":{}}}],["aplicação",{"_index":598,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":17,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":31,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["apt",{"_index":516,"title":{},"body":{"index.html":{}}}],["arch=amd64",{"_index":546,"title":{},"body":{"index.html":{}}}],["area",{"_index":183,"title":{},"body":{"classes/CreateImovelDto.html":{},"interfaces/Imovel.html":{},"classes/ImovelDto.html":{},"miscellaneous/variables.html":{}}}],["aremovendo",{"_index":637,"title":{},"body":{"index.html":{}}}],["async",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DefaultStrategy.html":{},"controllers/ImovelController.html":{},"injectables/ImovelService.html":{},"injectables/MasterStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["ativos",{"_index":632,"title":{},"body":{"index.html":{}}}],["atualizar",{"_index":337,"title":{},"body":{"injectables/ImovelService.html":{},"injectables/UserService.html":{}}}],["autenticação",{"_index":118,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["auth",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":94,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/DefaultStrategy.html":{},"injectables/MasterStrategy.html":{}}}],["auth/auth.module",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":59,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticationdatabase",{"_index":585,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ImovelController.html":{},"controllers/UserController.html":{}}}],["authmodule",{"_index":28,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":76,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DefaultStrategy.html":{},"injectables/MasterStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["authsource",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autoindex",{"_index":671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":646,"title":{},"body":{"modules.html":{}}}],["await",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DefaultStrategy.html":{},"controllers/ImovelController.html":{},"injectables/ImovelService.html":{},"injectables/MasterStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["bairro",{"_index":184,"title":{},"body":{"classes/CreateImovelDto.html":{},"interfaces/Imovel.html":{},"classes/ImovelDto.html":{},"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.gensalt(10",{"_index":432,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(pass",{"_index":433,"title":{},"body":{"injectables/UserService.html":{}}}],["bearer",{"_index":611,"title":{},"body":{"index.html":{}}}],["body",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ImovelController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["boolean",{"_index":211,"title":{},"body":{"classes/CreateImovelDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Imovel.html":{},"classes/ImovelDto.html":{},"classes/LoginUserDto.html":{},"interfaces/User.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImovelModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":644,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":641,"title":{},"body":{"modules.html":{}}}],["buffercommands",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffermaxentries",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":521,"title":{},"body":{"index.html":{}}}],["buscar",{"_index":406,"title":{},"body":{"injectables/UserService.html":{}}}],["ca",{"_index":536,"title":{},"body":{"index.html":{}}}],["cache",{"_index":526,"title":{},"body":{"index.html":{}}}],["ce",{"_index":551,"title":{},"body":{"index.html":{}}}],["ce/ubuntu",{"_index":533,"title":{},"body":{"index.html":{}}}],["cep",{"_index":185,"title":{},"body":{"classes/CreateImovelDto.html":{},"interfaces/Imovel.html":{},"classes/ImovelDto.html":{},"miscellaneous/variables.html":{}}}],["certificates",{"_index":537,"title":{},"body":{"index.html":{}}}],["class",{"_index":11,"title":{"classes/CreateImovelDto.html":{},"classes/CreateUserDto.html":{},"classes/ImovelDto.html":{},"classes/LoginUserDto.html":{},"classes/Users.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateImovelDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DefaultStrategy.html":{},"controllers/ImovelController.html":{},"classes/ImovelDto.html":{},"modules/ImovelModule.html":{},"injectables/ImovelService.html":{},"classes/LoginUserDto.html":{},"injectables/MasterStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"coverage.html":{}}}],["classes",{"_index":180,"title":{},"body":{"classes/CreateImovelDto.html":{},"classes/CreateUserDto.html":{},"classes/ImovelDto.html":{},"classes/LoginUserDto.html":{},"classes/Users.html":{},"overview.html":{}}}],["clean",{"_index":527,"title":{},"body":{"index.html":{}}}],["cli",{"_index":552,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":83,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":84,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":85,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_imovelmodule",{"_index":307,"title":{},"body":{"modules/ImovelModule.html":{},"overview.html":{}}}],["cluster_imovelmodule_exports",{"_index":309,"title":{},"body":{"modules/ImovelModule.html":{},"overview.html":{}}}],["cluster_imovelmodule_imports",{"_index":308,"title":{},"body":{"modules/ImovelModule.html":{},"overview.html":{}}}],["cluster_imovelmodule_providers",{"_index":310,"title":{},"body":{"modules/ImovelModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":378,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":380,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":379,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":381,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["collection",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["com",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["common",{"_index":539,"title":{},"body":{"index.html":{}}}],["complemento",{"_index":186,"title":{},"body":{"classes/CreateImovelDto.html":{},"interfaces/Imovel.html":{},"classes/ImovelDto.html":{},"miscellaneous/variables.html":{}}}],["compose",{"_index":570,"title":{},"body":{"index.html":{}}}],["composevisualizar",{"_index":554,"title":{},"body":{"index.html":{}}}],["conexões",{"_index":577,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["connection",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.model('imovel",{"_index":682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.model('user",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connecttimeoutms",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DefaultStrategy.html":{},"injectables/MasterStrategy.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/DefaultStrategy.html":{},"injectables/ImovelService.html":{},"injectables/MasterStrategy.html":{},"injectables/UserService.html":{}}}],["constructor(@inject('imovel_model",{"_index":340,"title":{},"body":{"injectables/ImovelService.html":{}}}],["constructor(@inject('user_model",{"_index":415,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":229,"title":{},"body":{"injectables/DefaultStrategy.html":{},"injectables/MasterStrategy.html":{}}}],["constructor(imovelmodel",{"_index":317,"title":{},"body":{"injectables/ImovelService.html":{}}}],["constructor(private",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/DefaultStrategy.html":{},"controllers/ImovelController.html":{},"injectables/MasterStrategy.html":{},"controllers/UserController.html":{}}}],["constructor(usermodel",{"_index":391,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(usersservice",{"_index":109,"title":{},"body":{"injectables/AuthService.html":{}}}],["container",{"_index":633,"title":{},"body":{"index.html":{}}}],["containerd.io",{"_index":553,"title":{},"body":{"index.html":{}}}],["containers",{"_index":572,"title":{},"body":{"index.html":{}}}],["contem",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImovelController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ImovelController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('imovel",{"_index":276,"title":{},"body":{"controllers/ImovelController.html":{}}}],["controller('user",{"_index":368,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ImovelController.html":{},"modules/ImovelModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["core",{"_index":519,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":437,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":253,"title":{},"body":{"controllers/ImovelController.html":{},"injectables/ImovelService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":283,"title":{},"body":{"controllers/ImovelController.html":{},"controllers/UserController.html":{}}}],["create(create",{"_index":258,"title":{},"body":{"controllers/ImovelController.html":{},"controllers/UserController.html":{}}}],["create(createimoveldto",{"_index":327,"title":{},"body":{"injectables/ImovelService.html":{}}}],["create(createuserdto",{"_index":394,"title":{},"body":{"injectables/UserService.html":{}}}],["created_at",{"_index":207,"title":{},"body":{"classes/CreateImovelDto.html":{},"interfaces/Imovel.html":{},"classes/ImovelDto.html":{},"miscellaneous/variables.html":{}}}],["createimoveldto",{"_index":179,"title":{"classes/CreateImovelDto.html":{}},"body":{"classes/CreateImovelDto.html":{},"controllers/ImovelController.html":{},"classes/ImovelDto.html":{},"injectables/ImovelService.html":{},"coverage.html":{}}}],["createjwtpayload",{"_index":106,"title":{},"body":{"injectables/AuthService.html":{}}}],["createjwtpayload(user",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{}}}],["createnewpasswordhash",{"_index":387,"title":{},"body":{"injectables/UserService.html":{}}}],["createnewpasswordhash(pass",{"_index":398,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto",{"_index":212,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"coverage.html":{}}}],["createuserdto.password",{"_index":421,"title":{},"body":{"injectables/UserService.html":{}}}],["credentials",{"_index":560,"title":{},"body":{"index.html":{}}}],["criado",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{}}}],["criar",{"_index":329,"title":{},"body":{"injectables/ImovelService.html":{},"index.html":{}}}],["criação",{"_index":396,"title":{},"body":{"injectables/UserService.html":{}}}],["cs",{"_index":549,"title":{},"body":{"index.html":{}}}],["curl",{"_index":520,"title":{},"body":{"index.html":{}}}],["da",{"_index":608,"title":{},"body":{"index.html":{}}}],["dados",{"_index":625,"title":{},"body":{"index.html":{}}}],["das",{"_index":573,"title":{},"body":{"index.html":{}}}],["data",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["database.providers",{"_index":226,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database/database.module",{"_index":313,"title":{},"body":{"modules/ImovelModule.html":{},"modules/UserModule.html":{}}}],["database_connection",{"_index":662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":223,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules/ImovelModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseproviders",{"_index":225,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date.now",{"_index":687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db.user.insert({\"ismaster",{"_index":591,"title":{},"body":{"index.html":{}}}],["dboptions",{"_index":664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["de",{"_index":397,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["deb",{"_index":545,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImovelModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ImovelController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_secret",{"_index":559,"title":{},"body":{"index.html":{}}}],["default_secret=opensapi_secret",{"_index":566,"title":{},"body":{"index.html":{}}}],["default_user",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{},"injectables/DefaultStrategy.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":86,"title":{"injectables/DefaultStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/DefaultStrategy.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":52,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateImovelDto.html":{},"classes/CreateUserDto.html":{},"injectables/DefaultStrategy.html":{},"controllers/ImovelController.html":{},"classes/ImovelDto.html":{},"injectables/ImovelService.html":{},"classes/LoginUserDto.html":{},"injectables/MasterStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Users.html":{}}}],["definidas",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["del",{"_index":617,"title":{},"body":{"index.html":{}}}],["deletar",{"_index":333,"title":{},"body":{"injectables/ImovelService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["delete",{"_index":254,"title":{},"body":{"controllers/ImovelController.html":{},"injectables/ImovelService.html":{},"controllers/UserController.html":{}}}],["delete('/:id",{"_index":288,"title":{},"body":{"controllers/ImovelController.html":{},"controllers/UserController.html":{}}}],["delete(@param('id",{"_index":289,"title":{},"body":{"controllers/ImovelController.html":{},"controllers/UserController.html":{}}}],["delete(id",{"_index":261,"title":{},"body":{"controllers/ImovelController.html":{},"injectables/ImovelService.html":{},"controllers/UserController.html":{}}}],["deletebyid",{"_index":388,"title":{},"body":{"injectables/UserService.html":{}}}],["deletebyid(id",{"_index":402,"title":{},"body":{"injectables/UserService.html":{}}}],["dependencies",{"_index":19,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImovelModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependências",{"_index":597,"title":{},"body":{"index.html":{}}}],["depois",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["descricao",{"_index":187,"title":{},"body":{"classes/CreateImovelDto.html":{},"interfaces/Imovel.html":{},"classes/ImovelDto.html":{},"miscellaneous/variables.html":{}}}],["dev",{"_index":525,"title":{},"body":{"index.html":{}}}],["docker",{"_index":509,"title":{},"body":{"index.html":{}}}],["document",{"_index":249,"title":{},"body":{"interfaces/Imovel.html":{},"interfaces/User.html":{}}}],["documentation",{"_index":438,"title":{},"body":{"coverage.html":{}}}],["documentação",{"_index":555,"title":{},"body":{"index.html":{}}}],["dos",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["dotenv",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["dtestar",{"_index":576,"title":{},"body":{"index.html":{}}}],["e",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["em",{"_index":601,"title":{},"body":{"index.html":{}}}],["email",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["email\":\"master@master.com",{"_index":603,"title":{},"body":{"index.html":{}}}],["email\":\"teste@teste.com",{"_index":615,"title":{},"body":{"index.html":{}}}],["encryptar",{"_index":400,"title":{},"body":{"injectables/UserService.html":{}}}],["endpoints",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["env",{"_index":558,"title":{},"body":{"index.html":{}}}],["error",{"_index":418,"title":{},"body":{"injectables/UserService.html":{}}}],["essential",{"_index":522,"title":{},"body":{"index.html":{}}}],["estratégias",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["executando",{"_index":568,"title":{},"body":{"index.html":{}}}],["execute",{"_index":569,"title":{},"body":{"index.html":{}}}],["existe",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["expiresin",{"_index":103,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateImovelDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DefaultStrategy.html":{},"interfaces/Imovel.html":{},"controllers/ImovelController.html":{},"classes/ImovelDto.html":{},"modules/ImovelModule.html":{},"injectables/ImovelService.html":{},"classes/LoginUserDto.html":{},"injectables/MasterStrategy.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Users.html":{}}}],["exports",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImovelModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":476,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["extends",{"_index":237,"title":{},"body":{"injectables/DefaultStrategy.html":{},"interfaces/Imovel.html":{},"injectables/MasterStrategy.html":{},"interfaces/User.html":{}}}],["extractjwt",{"_index":234,"title":{},"body":{"injectables/DefaultStrategy.html":{},"injectables/MasterStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":241,"title":{},"body":{"injectables/DefaultStrategy.html":{},"injectables/MasterStrategy.html":{}}}],["f",{"_index":528,"title":{},"body":{"index.html":{}}}],["false",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DefaultStrategy.html":{},"injectables/ImovelService.html":{},"injectables/MasterStrategy.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["faça",{"_index":600,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateImovelDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DefaultStrategy.html":{},"interfaces/Imovel.html":{},"controllers/ImovelController.html":{},"classes/ImovelDto.html":{},"modules/ImovelModule.html":{},"injectables/ImovelService.html":{},"classes/LoginUserDto.html":{},"injectables/MasterStrategy.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"coverage.html":{}}}],["finalmente",{"_index":595,"title":{},"body":{"index.html":{}}}],["findonebyemail",{"_index":389,"title":{},"body":{"injectables/UserService.html":{}}}],["findonebyemail(email",{"_index":404,"title":{},"body":{"injectables/UserService.html":{}}}],["fssl",{"_index":540,"title":{},"body":{"index.html":{}}}],["function",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":501,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":529,"title":{},"body":{"index.html":{}}}],["get('/:id",{"_index":278,"title":{},"body":{"controllers/ImovelController.html":{},"controllers/UserController.html":{}}}],["get(@param('id",{"_index":279,"title":{},"body":{"controllers/ImovelController.html":{}}}],["get(@request",{"_index":376,"title":{},"body":{"controllers/UserController.html":{}}}],["get(id",{"_index":264,"title":{},"body":{"controllers/ImovelController.html":{},"injectables/ImovelService.html":{}}}],["get(req",{"_index":359,"title":{},"body":{"controllers/UserController.html":{}}}],["get:http://localhost:3000/user/:id",{"_index":623,"title":{},"body":{"index.html":{}}}],["getbyid",{"_index":390,"title":{},"body":{"injectables/UserService.html":{}}}],["getbyid(userid",{"_index":407,"title":{},"body":{"injectables/UserService.html":{}}}],["gethello",{"_index":51,"title":{},"body":{"injectables/AppService.html":{}}}],["getting",{"_index":503,"title":{"index.html":{}},"body":{}}],["git",{"_index":518,"title":{},"body":{"index.html":{}}}],["graph",{"_index":645,"title":{},"body":{"modules.html":{}}}],["hello",{"_index":57,"title":{},"body":{"injectables/AppService.html":{}}}],["http://localhost:3000/user",{"_index":612,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/user/:id",{"_index":618,"title":{},"body":{"index.html":{}}}],["http://localhost:8081docker",{"_index":629,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":413,"title":{},"body":{"injectables/UserService.html":{}}}],["https",{"_index":535,"title":{},"body":{"index.html":{}}}],["https://docs.docker.com/install/linux/docker",{"_index":532,"title":{},"body":{"index.html":{}}}],["https://download.docker.com/linux/ubuntu",{"_index":547,"title":{},"body":{"index.html":{}}}],["https://download.docker.com/linux/ubuntu/gpg",{"_index":541,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":414,"title":{},"body":{"injectables/UserService.html":{}}}],["httpstatus.forbidden",{"_index":417,"title":{},"body":{"injectables/UserService.html":{}}}],["id",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ImovelController.html":{},"injectables/ImovelService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":242,"title":{},"body":{"injectables/DefaultStrategy.html":{},"injectables/MasterStrategy.html":{}}}],["imagem",{"_index":639,"title":{},"body":{"index.html":{}}}],["imagens",{"_index":571,"title":{},"body":{"index.html":{}}}],["images",{"_index":636,"title":{},"body":{"index.html":{}}}],["imoveis/imovel.module",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["imovel",{"_index":246,"title":{"interfaces/Imovel.html":{}},"body":{"interfaces/Imovel.html":{},"controllers/ImovelController.html":{},"injectables/ImovelService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["imovel.controller",{"_index":312,"title":{},"body":{"modules/ImovelModule.html":{}}}],["imovel.dto",{"_index":270,"title":{},"body":{"controllers/ImovelController.html":{},"injectables/ImovelService.html":{}}}],["imovel.interface",{"_index":338,"title":{},"body":{"injectables/ImovelService.html":{}}}],["imovel.providers",{"_index":315,"title":{},"body":{"modules/ImovelModule.html":{}}}],["imovel.service",{"_index":272,"title":{},"body":{"controllers/ImovelController.html":{},"modules/ImovelModule.html":{}}}],["imovel_model",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imovelcontroller",{"_index":251,"title":{"controllers/ImovelController.html":{}},"body":{"controllers/ImovelController.html":{},"modules/ImovelModule.html":{},"coverage.html":{}}}],["imoveldto",{"_index":205,"title":{"classes/ImovelDto.html":{}},"body":{"classes/CreateImovelDto.html":{},"controllers/ImovelController.html":{},"classes/ImovelDto.html":{},"injectables/ImovelService.html":{},"coverage.html":{}}}],["imovelmodel",{"_index":320,"title":{},"body":{"injectables/ImovelService.html":{}}}],["imovelmodule",{"_index":29,"title":{"modules/ImovelModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ImovelModule.html":{},"modules.html":{},"overview.html":{}}}],["imovelproviders",{"_index":314,"title":{},"body":{"modules/ImovelModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["imovelschema",{"_index":454,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["imovelservice",{"_index":271,"title":{"injectables/ImovelService.html":{}},"body":{"controllers/ImovelController.html":{},"modules/ImovelModule.html":{},"injectables/ImovelService.html":{},"coverage.html":{},"overview.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/DefaultStrategy.html":{},"interfaces/Imovel.html":{},"controllers/ImovelController.html":{},"modules/ImovelModule.html":{},"injectables/ImovelService.html":{},"injectables/MasterStrategy.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImovelModule.html":{},"modules/UserModule.html":{}}}],["imóveis",{"_index":325,"title":{},"body":{"injectables/ImovelService.html":{}}}],["imóvel",{"_index":331,"title":{},"body":{"injectables/ImovelService.html":{}}}],["index",{"_index":49,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateImovelDto.html":{},"classes/CreateUserDto.html":{},"injectables/DefaultStrategy.html":{},"interfaces/Imovel.html":{},"controllers/ImovelController.html":{},"classes/ImovelDto.html":{},"injectables/ImovelService.html":{},"classes/LoginUserDto.html":{},"injectables/MasterStrategy.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateImovelDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DefaultStrategy.html":{},"interfaces/Imovel.html":{},"controllers/ImovelController.html":{},"classes/ImovelDto.html":{},"modules/ImovelModule.html":{},"injectables/ImovelService.html":{},"classes/LoginUserDto.html":{},"injectables/MasterStrategy.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Users.html":{}}}],["informações",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{}}}],["inject",{"_index":339,"title":{},"body":{"injectables/ImovelService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":46,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/DefaultStrategy.html":{},"injectables/ImovelService.html":{},"injectables/MasterStrategy.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/DefaultStrategy.html":{},"injectables/ImovelService.html":{},"injectables/MasterStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":47,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/DefaultStrategy.html":{},"injectables/ImovelService.html":{},"injectables/MasterStrategy.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["instalação",{"_index":514,"title":{},"body":{"index.html":{}}}],["instale",{"_index":596,"title":{},"body":{"index.html":{}}}],["install",{"_index":517,"title":{},"body":{"index.html":{}}}],["interface",{"_index":245,"title":{"interfaces/Imovel.html":{},"interfaces/User.html":{}},"body":{"interfaces/Imovel.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":247,"title":{},"body":{"interfaces/Imovel.html":{},"interfaces/User.html":{},"overview.html":{}}}],["ismaster",{"_index":214,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"interfaces/User.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["ismatch",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["j",{"_index":420,"title":{},"body":{"injectables/UserService.html":{}}}],["jsonwebtoken",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DefaultStrategy.html":{},"injectables/MasterStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["jwtfromrequest",{"_index":240,"title":{},"body":{"injectables/DefaultStrategy.html":{},"injectables/MasterStrategy.html":{}}}],["jwtmodule",{"_index":90,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":111,"title":{},"body":{"injectables/AuthService.html":{}}}],["keepalive",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keepaliveinitialdelay",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key",{"_index":542,"title":{},"body":{"index.html":{}}}],["latestinstalação",{"_index":531,"title":{},"body":{"index.html":{}}}],["lean().exec",{"_index":425,"title":{},"body":{"injectables/UserService.html":{}}}],["legend",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImovelModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["libssl",{"_index":524,"title":{},"body":{"index.html":{}}}],["listando",{"_index":631,"title":{},"body":{"index.html":{}}}],["local",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["localidade",{"_index":188,"title":{},"body":{"classes/CreateImovelDto.html":{},"interfaces/Imovel.html":{},"classes/ImovelDto.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"interfaces/User.html":{},"classes/Users.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["login\":\"testador",{"_index":621,"title":{},"body":{"index.html":{}}}],["login\":\"teste",{"_index":613,"title":{},"body":{"index.html":{}}}],["login(@body",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(loginuserdto",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginattempt",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginattempt.email",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginattempt.password",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginuserdto",{"_index":66,"title":{"classes/LoginUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/Users.html":{},"coverage.html":{}}}],["logradouro",{"_index":189,"title":{},"body":{"classes/CreateImovelDto.html":{},"interfaces/Imovel.html":{},"classes/ImovelDto.html":{},"miscellaneous/variables.html":{}}}],["lsb_release",{"_index":548,"title":{},"body":{"index.html":{}}}],["lsparando",{"_index":634,"title":{},"body":{"index.html":{}}}],["master",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MasterStrategy.html":{},"index.html":{}}}],["master@master.com",{"_index":592,"title":{},"body":{"index.html":{}}}],["master_secret",{"_index":561,"title":{},"body":{"index.html":{}}}],["master_secret=opensapi_master_secret",{"_index":567,"title":{},"body":{"index.html":{}}}],["masterstrategy",{"_index":87,"title":{"injectables/MasterStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/MasterStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["match",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateImovelDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DefaultStrategy.html":{},"interfaces/Imovel.html":{},"controllers/ImovelController.html":{},"classes/ImovelDto.html":{},"modules/ImovelModule.html":{},"injectables/ImovelService.html":{},"classes/LoginUserDto.html":{},"injectables/MasterStrategy.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":50,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DefaultStrategy.html":{},"controllers/ImovelController.html":{},"injectables/ImovelService.html":{},"injectables/MasterStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":500,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":318,"title":{},"body":{"injectables/ImovelService.html":{},"injectables/UserService.html":{}}}],["module",{"_index":16,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImovelModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImovelModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":18,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImovelModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":578,"title":{},"body":{"index.html":{}}}],["mongo_pass=opens",{"_index":564,"title":{},"body":{"index.html":{}}}],["mongo_schema=admin",{"_index":565,"title":{},"body":{"index.html":{}}}],["mongo_user=root",{"_index":563,"title":{},"body":{"index.html":{}}}],["mongodb",{"_index":513,"title":{},"body":{"index.html":{}}}],["mongoexpress",{"_index":574,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":250,"title":{},"body":{"interfaces/Imovel.html":{},"injectables/ImovelService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["mongoose.connect(process.env.mongo_url",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.schema",{"_index":683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["método",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ImovelService.html":{},"injectables/UserService.html":{}}}],["n",{"_index":530,"title":{},"body":{"index.html":{}}}],["name",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/DefaultStrategy.html":{},"controllers/ImovelController.html":{},"injectables/ImovelService.html":{},"classes/LoginUserDto.html":{},"injectables/MasterStrategy.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name\":\"testador",{"_index":622,"title":{},"body":{"index.html":{}}}],["name\":\"teste",{"_index":614,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/DefaultStrategy.html":{},"controllers/ImovelController.html":{},"modules/ImovelModule.html":{},"injectables/ImovelService.html":{},"injectables/MasterStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":91,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":93,"title":{},"body":{"modules/AuthModule.html":{},"injectables/DefaultStrategy.html":{},"controllers/ImovelController.html":{},"injectables/MasterStrategy.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DefaultStrategy.html":{},"injectables/ImovelService.html":{},"injectables/MasterStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":507,"title":{},"body":{"index.html":{}}}],["nos",{"_index":610,"title":{},"body":{"index.html":{}}}],["npm",{"_index":508,"title":{},"body":{"index.html":{}}}],["number",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateImovelDto.html":{},"interfaces/Imovel.html":{},"classes/ImovelDto.html":{},"miscellaneous/variables.html":{}}}],["numero",{"_index":190,"title":{},"body":{"classes/CreateImovelDto.html":{},"interfaces/Imovel.html":{},"classes/ImovelDto.html":{},"miscellaneous/variables.html":{}}}],["não",{"_index":511,"title":{},"body":{"index.html":{}}}],["o",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["ok",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{}}}],["opens",{"_index":584,"title":{},"body":{"index.html":{}}}],["opensapi",{"_index":590,"title":{},"body":{"index.html":{}}}],["openssl",{"_index":523,"title":{},"body":{"index.html":{}}}],["optional",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateImovelDto.html":{},"injectables/DefaultStrategy.html":{},"interfaces/Imovel.html":{},"controllers/ImovelController.html":{},"classes/ImovelDto.html":{},"injectables/ImovelService.html":{},"injectables/MasterStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["os",{"_index":324,"title":{},"body":{"injectables/ImovelService.html":{}}}],["out",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImovelModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":647,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":583,"title":{},"body":{"index.html":{}}}],["package",{"_index":469,"title":{"dependencies.html":{}},"body":{}}],["para",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ImovelService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["param",{"_index":273,"title":{},"body":{"controllers/ImovelController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":371,"title":{},"body":{"controllers/UserController.html":{}}}],["parameters",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DefaultStrategy.html":{},"controllers/ImovelController.html":{},"injectables/ImovelService.html":{},"injectables/MasterStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["pass",{"_index":401,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["passport",{"_index":236,"title":{},"body":{"injectables/DefaultStrategy.html":{},"injectables/MasterStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passportmodule.register",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["passportstrategy",{"_index":233,"title":{},"body":{"injectables/DefaultStrategy.html":{},"injectables/MasterStrategy.html":{}}}],["passportstrategy(strategy",{"_index":238,"title":{},"body":{"injectables/DefaultStrategy.html":{},"injectables/MasterStrategy.html":{}}}],["password",{"_index":215,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"interfaces/User.html":{},"classes/Users.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["password\":\"123456",{"_index":616,"title":{},"body":{"index.html":{}}}],["payload",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DefaultStrategy.html":{},"injectables/MasterStrategy.html":{}}}],["por",{"_index":334,"title":{},"body":{"injectables/ImovelService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["port",{"_index":579,"title":{},"body":{"index.html":{}}}],["possuir",{"_index":512,"title":{},"body":{"index.html":{}}}],["post",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ImovelController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["post:http://localhost:3000/auth",{"_index":602,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ImovelController.html":{},"controllers/UserController.html":{}}}],["private",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ImovelService.html":{},"injectables/UserService.html":{}}}],["process.env.default_secret",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DefaultStrategy.html":{}}}],["process.env.master_secret",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MasterStrategy.html":{}}}],["process.env.mongo_pass",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.mongo_schema",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.mongo_user",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":326,"title":{},"body":{"injectables/ImovelService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":182,"title":{},"body":{"classes/CreateImovelDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Imovel.html":{},"classes/ImovelDto.html":{},"classes/LoginUserDto.html":{},"interfaces/User.html":{},"classes/Users.html":{},"index.html":{}}}],["provide",{"_index":661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/ImovelModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["published_at",{"_index":209,"title":{},"body":{"classes/CreateImovelDto.html":{},"interfaces/Imovel.html":{},"classes/ImovelDto.html":{},"miscellaneous/variables.html":{}}}],["put",{"_index":274,"title":{},"body":{"controllers/ImovelController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["put('/:id",{"_index":285,"title":{},"body":{"controllers/ImovelController.html":{},"controllers/UserController.html":{}}}],["readonly",{"_index":221,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/ImovelController.html":{},"injectables/ImovelService.html":{},"classes/LoginUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Users.html":{}}}],["reflect",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":544,"title":{},"body":{"index.html":{}}}],["req",{"_index":361,"title":{},"body":{"controllers/UserController.html":{}}}],["req.user._id",{"_index":372,"title":{},"body":{"controllers/UserController.html":{}}}],["req.user.ismaster",{"_index":373,"title":{},"body":{"controllers/UserController.html":{}}}],["request",{"_index":367,"title":{},"body":{"controllers/UserController.html":{}}}],["required",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requisitos",{"_index":505,"title":{},"body":{"index.html":{}}}],["reset",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImovelModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resgate",{"_index":605,"title":{},"body":{"index.html":{}}}],["responsável",{"_index":587,"title":{},"body":{"index.html":{}}}],["result",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateImovelDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DefaultStrategy.html":{},"interfaces/Imovel.html":{},"controllers/ImovelController.html":{},"classes/ImovelDto.html":{},"modules/ImovelModule.html":{},"injectables/ImovelService.html":{},"classes/LoginUserDto.html":{},"injectables/MasterStrategy.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateImovelDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DefaultStrategy.html":{},"interfaces/Imovel.html":{},"controllers/ImovelController.html":{},"classes/ImovelDto.html":{},"modules/ImovelModule.html":{},"injectables/ImovelService.html":{},"classes/LoginUserDto.html":{},"injectables/MasterStrategy.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{}}}],["retornado",{"_index":607,"title":{},"body":{"index.html":{}}}],["retornar",{"_index":322,"title":{},"body":{"injectables/ImovelService.html":{},"injectables/UserService.html":{}}}],["return",{"_index":56,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DefaultStrategy.html":{},"controllers/ImovelController.html":{},"injectables/ImovelService.html":{},"injectables/MasterStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":54,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DefaultStrategy.html":{},"controllers/ImovelController.html":{},"injectables/ImovelService.html":{},"injectables/MasterStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["rmi",{"_index":640,"title":{},"body":{"index.html":{}}}],["root",{"_index":582,"title":{},"body":{"index.html":{}}}],["run",{"_index":556,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":431,"title":{},"body":{"injectables/UserService.html":{}}}],["se",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["secret",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["secretorkey",{"_index":243,"title":{},"body":{"injectables/DefaultStrategy.html":{},"injectables/MasterStrategy.html":{}}}],["senha",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["set",{"_index":344,"title":{},"body":{"injectables/ImovelService.html":{},"injectables/UserService.html":{}}}],["signoptions",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{}}}],["simples",{"_index":619,"title":{},"body":{"index.html":{}}}],["sistema",{"_index":506,"title":{},"body":{"index.html":{}}}],["software",{"_index":538,"title":{},"body":{"index.html":{}}}],["solicitado",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{}}}],["somente",{"_index":510,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateImovelDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DefaultStrategy.html":{},"interfaces/Imovel.html":{},"controllers/ImovelController.html":{},"classes/ImovelDto.html":{},"modules/ImovelModule.html":{},"injectables/ImovelService.html":{},"classes/LoginUserDto.html":{},"injectables/MasterStrategy.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/Users.html":{}}}],["src/.../auth.module.ts",{"_index":656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.providers.ts",{"_index":653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../imovel.providers.ts",{"_index":654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../imovel.schema.ts",{"_index":655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":502,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.providers.ts",{"_index":657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":48,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":53,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:11",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":88,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.service.ts",{"_index":105,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:18",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:37",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:58",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:8",{"_index":112,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/strategies/default.strategy.ts",{"_index":227,"title":{},"body":{"injectables/DefaultStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/default.strategy.ts:17",{"_index":232,"title":{},"body":{"injectables/DefaultStrategy.html":{}}}],["src/auth/strategies/default.strategy.ts:7",{"_index":230,"title":{},"body":{"injectables/DefaultStrategy.html":{}}}],["src/auth/strategies/master.strategy.ts",{"_index":351,"title":{},"body":{"injectables/MasterStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/master.strategy.ts:17",{"_index":353,"title":{},"body":{"injectables/MasterStrategy.html":{}}}],["src/auth/strategies/master.strategy.ts:7",{"_index":352,"title":{},"body":{"injectables/MasterStrategy.html":{}}}],["src/database/database.module.ts",{"_index":224,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/database.providers.ts",{"_index":448,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/imoveis/imovel.controller.ts",{"_index":252,"title":{},"body":{"controllers/ImovelController.html":{},"coverage.html":{}}}],["src/imoveis/imovel.controller.ts:12",{"_index":266,"title":{},"body":{"controllers/ImovelController.html":{}}}],["src/imoveis/imovel.controller.ts:18",{"_index":257,"title":{},"body":{"controllers/ImovelController.html":{}}}],["src/imoveis/imovel.controller.ts:24",{"_index":260,"title":{},"body":{"controllers/ImovelController.html":{}}}],["src/imoveis/imovel.controller.ts:30",{"_index":269,"title":{},"body":{"controllers/ImovelController.html":{}}}],["src/imoveis/imovel.controller.ts:36",{"_index":263,"title":{},"body":{"controllers/ImovelController.html":{}}}],["src/imoveis/imovel.dto.ts",{"_index":181,"title":{},"body":{"classes/CreateImovelDto.html":{},"classes/ImovelDto.html":{},"coverage.html":{}}}],["src/imoveis/imovel.dto.ts:10",{"_index":195,"title":{},"body":{"classes/CreateImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:11",{"_index":199,"title":{},"body":{"classes/CreateImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:12",{"_index":203,"title":{},"body":{"classes/CreateImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:16",{"_index":291,"title":{},"body":{"classes/ImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:17",{"_index":303,"title":{},"body":{"classes/ImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:18",{"_index":297,"title":{},"body":{"classes/ImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:19",{"_index":306,"title":{},"body":{"classes/ImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:2",{"_index":202,"title":{},"body":{"classes/CreateImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:20",{"_index":292,"title":{},"body":{"classes/ImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:21",{"_index":294,"title":{},"body":{"classes/ImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:22",{"_index":299,"title":{},"body":{"classes/ImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:23",{"_index":300,"title":{},"body":{"classes/ImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:24",{"_index":295,"title":{},"body":{"classes/ImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:25",{"_index":293,"title":{},"body":{"classes/ImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:26",{"_index":298,"title":{},"body":{"classes/ImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:27",{"_index":304,"title":{},"body":{"classes/ImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:28",{"_index":296,"title":{},"body":{"classes/ImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:29",{"_index":305,"title":{},"body":{"classes/ImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:3",{"_index":198,"title":{},"body":{"classes/CreateImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:30",{"_index":301,"title":{},"body":{"classes/ImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:31",{"_index":302,"title":{},"body":{"classes/ImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:4",{"_index":204,"title":{},"body":{"classes/CreateImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:5",{"_index":194,"title":{},"body":{"classes/CreateImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:6",{"_index":196,"title":{},"body":{"classes/CreateImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:7",{"_index":200,"title":{},"body":{"classes/CreateImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:8",{"_index":201,"title":{},"body":{"classes/CreateImovelDto.html":{}}}],["src/imoveis/imovel.dto.ts:9",{"_index":197,"title":{},"body":{"classes/CreateImovelDto.html":{}}}],["src/imoveis/imovel.interface.ts",{"_index":248,"title":{},"body":{"interfaces/Imovel.html":{},"coverage.html":{}}}],["src/imoveis/imovel.module.ts",{"_index":311,"title":{},"body":{"modules/ImovelModule.html":{}}}],["src/imoveis/imovel.providers.ts",{"_index":452,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/imoveis/imovel.schema.ts",{"_index":453,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/imoveis/imovel.service.ts",{"_index":316,"title":{},"body":{"injectables/ImovelService.html":{},"coverage.html":{}}}],["src/imoveis/imovel.service.ts:15",{"_index":328,"title":{},"body":{"injectables/ImovelService.html":{}}}],["src/imoveis/imovel.service.ts:22",{"_index":321,"title":{},"body":{"injectables/ImovelService.html":{}}}],["src/imoveis/imovel.service.ts:29",{"_index":336,"title":{},"body":{"injectables/ImovelService.html":{}}}],["src/imoveis/imovel.service.ts:39",{"_index":332,"title":{},"body":{"injectables/ImovelService.html":{}}}],["src/imoveis/imovel.service.ts:46",{"_index":335,"title":{},"body":{"injectables/ImovelService.html":{}}}],["src/imoveis/imovel.service.ts:7",{"_index":319,"title":{},"body":{"injectables/ImovelService.html":{}}}],["src/main.ts",{"_index":457,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/user.controller.ts",{"_index":356,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/users/user.controller.ts:13",{"_index":357,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/user.controller.ts:19",{"_index":363,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/user.controller.ts:25",{"_index":358,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/user.controller.ts:31",{"_index":360,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/user.dto.ts",{"_index":213,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/Users.html":{},"coverage.html":{}}}],["src/users/user.dto.ts:10",{"_index":220,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/user.dto.ts:11",{"_index":217,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/user.dto.ts:15",{"_index":435,"title":{},"body":{"classes/Users.html":{}}}],["src/users/user.dto.ts:16",{"_index":436,"title":{},"body":{"classes/Users.html":{}}}],["src/users/user.dto.ts:17",{"_index":434,"title":{},"body":{"classes/Users.html":{}}}],["src/users/user.dto.ts:2",{"_index":349,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["src/users/user.dto.ts:3",{"_index":350,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["src/users/user.dto.ts:7",{"_index":218,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/user.dto.ts:8",{"_index":219,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/user.dto.ts:9",{"_index":216,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/user.interface.ts",{"_index":354,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/users/user.module.ts",{"_index":382,"title":{},"body":{"modules/UserModule.html":{}}}],["src/users/user.providers.ts",{"_index":462,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/user.schema.ts",{"_index":463,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/user.service.ts",{"_index":386,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/users/user.service.ts:15",{"_index":395,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/user.service.ts:31",{"_index":405,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/user.service.ts:38",{"_index":412,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/user.service.ts:50",{"_index":403,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/user.service.ts:58",{"_index":408,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/user.service.ts:65",{"_index":399,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/user.service.ts:8",{"_index":392,"title":{},"body":{"injectables/UserService.html":{}}}],["stable",{"_index":550,"title":{},"body":{"index.html":{}}}],["start",{"_index":599,"title":{},"body":{"index.html":{}}}],["start:docconfigurações",{"_index":557,"title":{},"body":{"index.html":{}}}],["started",{"_index":504,"title":{"index.html":{}},"body":{}}],["statements",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":210,"title":{},"body":{"classes/CreateImovelDto.html":{},"interfaces/Imovel.html":{},"classes/ImovelDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["stop",{"_index":635,"title":{},"body":{"index.html":{}}}],["strategies/default.strategy",{"_index":95,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/master.strategy",{"_index":89,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":235,"title":{},"body":{"injectables/DefaultStrategy.html":{},"injectables/MasterStrategy.html":{}}}],["string",{"_index":55,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateImovelDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Imovel.html":{},"controllers/ImovelController.html":{},"classes/ImovelDto.html":{},"injectables/ImovelService.html":{},"classes/LoginUserDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["sudo",{"_index":515,"title":{},"body":{"index.html":{}}}],["super",{"_index":239,"title":{},"body":{"injectables/DefaultStrategy.html":{},"injectables/MasterStrategy.html":{}}}],["support",{"_index":642,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":643,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["testar",{"_index":627,"title":{},"body":{"index.html":{}}}],["tests",{"_index":630,"title":{},"body":{"index.html":{}}}],["this.authservice.validateuserbyjwt(payload",{"_index":244,"title":{},"body":{"injectables/DefaultStrategy.html":{},"injectables/MasterStrategy.html":{}}}],["this.authservice.validateuserbypassword(loginuserdto",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.createjwtpayload(usertoattempt",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createnewpasswordhash(createuserdto.password",{"_index":422,"title":{},"body":{"injectables/UserService.html":{}}}],["this.createnewpasswordhash(userdto.password",{"_index":427,"title":{},"body":{"injectables/UserService.html":{}}}],["this.findonebyemail(createuserdto.email",{"_index":416,"title":{},"body":{"injectables/UserService.html":{}}}],["this.imovelmodel(createimoveldto).save",{"_index":341,"title":{},"body":{"injectables/ImovelService.html":{}}}],["this.imovelmodel.find().lean().exec",{"_index":342,"title":{},"body":{"injectables/ImovelService.html":{}}}],["this.imovelmodel.findbyid(id).lean().exec",{"_index":348,"title":{},"body":{"injectables/ImovelService.html":{}}}],["this.imovelmodel.findbyidanddelete(id).exec",{"_index":347,"title":{},"body":{"injectables/ImovelService.html":{}}}],["this.imovelmodel.findbyidandupdate(id",{"_index":343,"title":{},"body":{"injectables/ImovelService.html":{}}}],["this.imovelservice.all",{"_index":281,"title":{},"body":{"controllers/ImovelController.html":{}}}],["this.imovelservice.create(create",{"_index":284,"title":{},"body":{"controllers/ImovelController.html":{}}}],["this.imovelservice.delete(id",{"_index":290,"title":{},"body":{"controllers/ImovelController.html":{}}}],["this.imovelservice.get(id",{"_index":280,"title":{},"body":{"controllers/ImovelController.html":{}}}],["this.imovelservice.update(id",{"_index":287,"title":{},"body":{"controllers/ImovelController.html":{}}}],["this.jwtservice.sign(data",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usermodel(createuserdto).save",{"_index":423,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyid(userid).lean().exec",{"_index":430,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyidanddelete(id).exec",{"_index":429,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyidandupdate(userid",{"_index":428,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findone",{"_index":424,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(create",{"_index":369,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.deletebyid(id",{"_index":375,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getbyid(id",{"_index":377,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":374,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.findonebyemail",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findonebyemail(payload.email",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DefaultStrategy.html":{},"injectables/MasterStrategy.html":{},"injectables/UserService.html":{}}}],["titulo",{"_index":191,"title":{},"body":{"classes/CreateImovelDto.html":{},"interfaces/Imovel.html":{},"classes/ImovelDto.html":{},"miscellaneous/variables.html":{}}}],["todos",{"_index":323,"title":{},"body":{"injectables/ImovelService.html":{}}}],["token",{"_index":606,"title":{},"body":{"index.html":{}}}],["tokenmongo_url=mongodb://localhost:27018/opensapi",{"_index":562,"title":{},"body":{"index.html":{}}}],["transport",{"_index":534,"title":{},"body":{"index.html":{}}}],["true",{"_index":345,"title":{},"body":{"injectables/ImovelService.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateImovelDto.html":{},"classes/CreateUserDto.html":{},"injectables/DefaultStrategy.html":{},"interfaces/Imovel.html":{},"controllers/ImovelController.html":{},"classes/ImovelDto.html":{},"injectables/ImovelService.html":{},"classes/LoginUserDto.html":{},"injectables/MasterStrategy.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/bcrypt",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["types/passport",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["u",{"_index":581,"title":{},"body":{"index.html":{}}}],["uf",{"_index":192,"title":{},"body":{"classes/CreateImovelDto.html":{},"interfaces/Imovel.html":{},"classes/ImovelDto.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":330,"title":{},"body":{"injectables/ImovelService.html":{},"injectables/UserService.html":{}}}],["uma",{"_index":638,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DefaultStrategy.html":{},"injectables/MasterStrategy.html":{}}}],["unique",{"_index":684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["up",{"_index":575,"title":{},"body":{"index.html":{}}}],["update",{"_index":255,"title":{},"body":{"controllers/ImovelController.html":{},"injectables/ImovelService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["update(@param('id",{"_index":286,"title":{},"body":{"controllers/ImovelController.html":{}}}],["update(@request",{"_index":370,"title":{},"body":{"controllers/UserController.html":{}}}],["update(id",{"_index":267,"title":{},"body":{"controllers/ImovelController.html":{},"injectables/ImovelService.html":{}}}],["update(req",{"_index":362,"title":{},"body":{"controllers/UserController.html":{}}}],["update(userid",{"_index":410,"title":{},"body":{"injectables/UserService.html":{}}}],["updated_at",{"_index":208,"title":{},"body":{"classes/CreateImovelDto.html":{},"interfaces/Imovel.html":{},"classes/ImovelDto.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":589,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usefindandmodify",{"_index":346,"title":{},"body":{"injectables/ImovelService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":275,"title":{},"body":{"controllers/ImovelController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard('master",{"_index":282,"title":{},"body":{"controllers/ImovelController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard(['default_user','master",{"_index":277,"title":{},"body":{"controllers/ImovelController.html":{},"controllers/UserController.html":{}}}],["useguards(undefined)@delete('/:id",{"_index":262,"title":{},"body":{"controllers/ImovelController.html":{},"controllers/UserController.html":{}}}],["useguards(undefined)@get",{"_index":256,"title":{},"body":{"controllers/ImovelController.html":{}}}],["useguards(undefined)@get('/:id",{"_index":265,"title":{},"body":{"controllers/ImovelController.html":{},"controllers/UserController.html":{}}}],["useguards(undefined)@post",{"_index":259,"title":{},"body":{"controllers/ImovelController.html":{},"controllers/UserController.html":{}}}],["useguards(undefined)@put('/:id",{"_index":268,"title":{},"body":{"controllers/ImovelController.html":{},"controllers/UserController.html":{}}}],["usenewurlparser",{"_index":665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":128,"title":{"interfaces/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/DefaultStrategy.html":{},"injectables/MasterStrategy.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user._id",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.controller",{"_index":383,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":365,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.email",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.interface",{"_index":364,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.ismaster",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.name",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.providers",{"_index":385,"title":{},"body":{"modules/UserModule.html":{}}}],["user.service",{"_index":366,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user_model",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":355,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdto",{"_index":411,"title":{},"body":{"injectables/UserService.html":{}}}],["userdto.password",{"_index":426,"title":{},"body":{"injectables/UserService.html":{}}}],["userid",{"_index":409,"title":{},"body":{"injectables/UserService.html":{}}}],["usermodel",{"_index":393,"title":{},"body":{"injectables/UserService.html":{}}}],["usermodule",{"_index":30,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userproviders",{"_index":384,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":222,"title":{"classes/Users.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"coverage.html":{}}}],["users/user.dto",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["users/user.module",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/user.service",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["userschema",{"_index":464,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":110,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usersservice",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{}}}],["usertoattempt",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["usertoattempt.password",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["useunifiedtopology",{"_index":666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usuario",{"_index":628,"title":{},"body":{"index.html":{}}}],["usuário",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["usuário/email",{"_index":419,"title":{},"body":{"injectables/UserService.html":{}}}],["usuários",{"_index":588,"title":{},"body":{"index.html":{}}}],["utilizar",{"_index":620,"title":{},"body":{"index.html":{}}}],["utilize",{"_index":609,"title":{},"body":{"index.html":{}}}],["validate",{"_index":228,"title":{},"body":{"injectables/DefaultStrategy.html":{},"injectables/MasterStrategy.html":{}}}],["validate(payload",{"_index":231,"title":{},"body":{"injectables/DefaultStrategy.html":{},"injectables/MasterStrategy.html":{}}}],["validateuserbyjwt",{"_index":107,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuserbyjwt(payload",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuserbypassword",{"_index":108,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuserbypassword(loginattempt",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["valor",{"_index":193,"title":{},"body":{"classes/CreateImovelDto.html":{},"interfaces/Imovel.html":{},"classes/ImovelDto.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":652,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifica",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["via",{"_index":626,"title":{},"body":{"index.html":{}}}],["válido",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["world",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["zoom",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ImovelModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller()\nexport class AppController {\n  constructor() {}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nImovelModule\n\nImovelModule\n\nAppModule -->\n\nImovelModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ImovelModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AuthModule } from './auth/auth.module';\nimport { UserModule } from './users/user.module';\nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule } from 'nestjs-dotenv';\nimport { ImovelModule } from './imoveis/imovel.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    AuthModule,\n    UserModule,\n    ImovelModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginUserDto: LoginUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDto\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { LoginUserDto } from './../users/user.dto';\nimport { Body, Controller, Post } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Controller('auth')\nexport class AuthController {\n\n    constructor(private authService: AuthService) {   }\n\n    @Post()\n    async login(@Body() loginUserDto: LoginUserDto) {\n        return await this.authService.validateUserByPassword(loginUserDto);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nDefaultStrategy\n\nDefaultStrategy\n\nAuthModule -->\n\nDefaultStrategy->AuthModule\n\n\n\n\n\nMasterStrategy\n\nMasterStrategy\n\nAuthModule -->\n\nMasterStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            DefaultStrategy\n                        \n                        \n                            MasterStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MasterStrategy } from './strategies/master.strategy';\n\nimport { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { UserModule } from '../users/user.module';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { DefaultStrategy } from './strategies/default.strategy';\n\nconst passportModule = PassportModule.register({ defaultStrategy: 'default_user' });\n\n@Module({\n  imports: [\n    passportModule,\n    JwtModule.register({\n      secret: process.env.DEFAULT_SECRET,\n      signOptions: {\n        expiresIn: '24h',\n      },\n    }),\n    UserModule,\n  ],\n  exports: [passportModule],\n  controllers: [AuthController],\n  providers: [AuthService, DefaultStrategy, MasterStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createJwtPayload\n                            \n                            \n                                    Async\n                                validateUserByJwt\n                            \n                            \n                                    Async\n                                validateUserByPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createJwtPayload\n                        \n                        \n                    \n                \n            \n            \n                \ncreateJwtPayload(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:37\n                \n            \n\n\n            \n                \n                    Método para autenticação OK: retorna jsonwebtoken criado com payload e informações do usuário\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { user: any; expiresIn: number; accessToken: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUserByJwt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUserByJwt(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:58\n                \n            \n\n\n            \n                \n                    Método solicitado para as estratégias definidas no AuthGuard dos endpoints: \nverifica se o payload contem usuário válido \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUserByPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUserByPassword(loginAttempt: LoginUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:18\n                \n            \n\n\n            \n                \n                    Método para autenticação (login), verifica se existe email e depois verifica match com senha\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginAttempt\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport { LoginUserDto } from '../users/user.dto';\nimport { UserService } from '../users/user.service';\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        private usersService: UserService,\n        private jwtService: JwtService,\n    ) { }\n\n\n    /**\n     * Método para autenticação (login), verifica se existe email e depois verifica match com senha\n     */\n    async validateUserByPassword(loginAttempt: LoginUserDto) {\n        const userToAttempt = await this.usersService.findOneByEmail(\n            loginAttempt.email,\n        );\n        const isMatch = userToAttempt ? await bcrypt.compare(\n            loginAttempt.password,\n            userToAttempt.password,\n        ) : false;\n        \n        if (isMatch) {\n            return this.createJwtPayload(userToAttempt);\n        } else {\n            throw new UnauthorizedException();\n        }\n    }\n\n    /**\n     * Método para autenticação OK: retorna jsonwebtoken criado com payload e informações do usuário\n     */\n    createJwtPayload(user: any) {\n        const data: any = {\n            id: user._id,\n            email: user.email,\n            name: user.name,\n            master: user.isMaster\n        };\n\n        const jwt = this.jwtService.sign(data, { secret: user.isMaster ? process.env.MASTER_SECRET : process.env.DEFAULT_SECRET });\n\n        return {\n            user: data,\n            expiresIn: 3600,\n            accessToken: jwt,\n        };\n    }\n\n    /**\n     * Método solicitado para as estratégias definidas no AuthGuard dos endpoints: \n     * verifica se o payload contem usuário válido \n     */\n    async validateUserByJwt(payload: any) {\n        const user = await this.usersService.findOneByEmail(payload.email);\n        if (user) {\n            return user;\n        } else {\n            throw new UnauthorizedException();\n        }\n    }    \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateImovelDto.html":{"url":"classes/CreateImovelDto.html","title":"class - CreateImovelDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateImovelDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imoveis/imovel.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                area\n                            \n                            \n                                bairro\n                            \n                            \n                                cep\n                            \n                            \n                                    Optional\n                                complemento\n                            \n                            \n                                descricao\n                            \n                            \n                                localidade\n                            \n                            \n                                logradouro\n                            \n                            \n                                    Optional\n                                numero\n                            \n                            \n                                titulo\n                            \n                            \n                                uf\n                            \n                            \n                                valor\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            area\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bairro\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cep\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            complemento\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            descricao\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localidade\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logradouro\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            numero\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            titulo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateImovelDto {\n    titulo: string;\n    descricao: string;\n    valor: number;\n    area: number;\n    cep: number;\n    logradouro: string;\n    numero?: string;\n    complemento?: string;\n    bairro: string;\n    localidade: string;\n    uf: string;\n}\n\nexport class ImovelDto {\n    _id?: string;\n    titulo: string;\n    descricao: string;\n    valor: number;\n    area: number;\n    cep: number;\n    logradouro: string;\n    numero?: string;\n    complemento?: string;\n    bairro: string;\n    localidade: string;\n    uf: string;\n    created_at: string;\n    updated_at: string;\n    published_at?: string;\n    status: boolean;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                isMaster\n                            \n                            \n                                login\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMaster\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginUserDto {\n    readonly email: string;\n    readonly password: string;\n}\n\nexport class CreateUserDto {\n    login: string;\n    name: string;\n    email: string;\n    password: string;\n    isMaster: boolean;\n}\n\nexport class Users {\n    login: string;\n    name: string;\n    email: string;    \n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { databaseProviders } from './database.providers';\n\n@Module({\n  imports: [],\n  providers: [...databaseProviders],\n  exports: [...databaseProviders],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DefaultStrategy.html":{"url":"injectables/DefaultStrategy.html","title":"injectable - DefaultStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DefaultStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/default.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/default.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/default.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class DefaultStrategy extends PassportStrategy(Strategy, 'default_user') {\n\n    constructor(private authService: AuthService) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: process.env.DEFAULT_SECRET,\n        });\n    }\n\n    async validate(payload: any) {\n        const user = await this.authService.validateUserByJwt(payload);\n        if (!user) {\n            throw new UnauthorizedException();\n        }\n        return user;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Imovel.html":{"url":"interfaces/Imovel.html","title":"interface - Imovel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Imovel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imoveis/imovel.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        area\n                                \n                                \n                                        bairro\n                                \n                                \n                                        cep\n                                \n                                \n                                            Optional\n                                        complemento\n                                \n                                \n                                        created_at\n                                \n                                \n                                        descricao\n                                \n                                \n                                        localidade\n                                \n                                \n                                        logradouro\n                                \n                                \n                                            Optional\n                                        numero\n                                \n                                \n                                            Optional\n                                        published_at\n                                \n                                \n                                        status\n                                \n                                \n                                        titulo\n                                \n                                \n                                        uf\n                                \n                                \n                                        updated_at\n                                \n                                \n                                        valor\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        area\n                                    \n                                \n                                \n                                    \n                                        area:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bairro\n                                    \n                                \n                                \n                                    \n                                        bairro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cep\n                                    \n                                \n                                \n                                    \n                                        cep:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        complemento\n                                    \n                                \n                                \n                                    \n                                        complemento:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        descricao\n                                    \n                                \n                                \n                                    \n                                        descricao:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localidade\n                                    \n                                \n                                \n                                    \n                                        localidade:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logradouro\n                                    \n                                \n                                \n                                    \n                                        logradouro:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numero\n                                    \n                                \n                                \n                                    \n                                        numero:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        published_at\n                                    \n                                \n                                \n                                    \n                                        published_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        titulo\n                                    \n                                \n                                \n                                    \n                                        titulo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uf\n                                    \n                                \n                                \n                                    \n                                        uf:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                    \n                                \n                                \n                                    \n                                        updated_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valor\n                                    \n                                \n                                \n                                    \n                                        valor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\n\nexport interface Imovel extends Document {\n    _id: string;\n    titulo: string;\n    descricao: string;\n    valor: number;\n    area: number;\n    cep: number;\n    logradouro: string;\n    numero?: string;\n    complemento?: string;\n    bairro: string;\n    localidade: string;\n    uf: string;\n    created_at: string;\n    updated_at: string;\n    published_at?: string;\n    status: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ImovelController.html":{"url":"controllers/ImovelController.html","title":"controller - ImovelController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ImovelController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imoveis/imovel.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                imovel\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                all\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            all\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    all()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Get()\n                \n            \n\n            \n                \n                    Defined in src/imoveis/imovel.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(create: CreateImovelDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Post()\n                \n            \n\n            \n                \n                    Defined in src/imoveis/imovel.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    create\n                                    \n                                                CreateImovelDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/imoveis/imovel.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/imoveis/imovel.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, update: ImovelDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Put('/:id')\n                \n            \n\n            \n                \n                    Defined in src/imoveis/imovel.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    update\n                                    \n                                                ImovelDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { CreateImovelDto, ImovelDto } from './imovel.dto';\nimport { ImovelService } from './imovel.service';\nimport { Body, Controller, Delete, Get, Param, Post, Put, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Controller('imovel')\nexport class ImovelController {\n  constructor(private readonly imovelService: ImovelService) {}\n\n  @UseGuards(AuthGuard(['default_user','master']))\n  @Get('/:id')\n  async get(@Param('id') id: string) {\n      return await this.imovelService.get(id);\n  }  \n\n  @UseGuards(AuthGuard(['default_user','master']))\n  @Get()\n  async all() {\n      return await this.imovelService.all();\n  }  \n\n  @UseGuards(AuthGuard('master'))\n  @Post()\n  async create(@Body() create: CreateImovelDto) {\n      return await this.imovelService.create(create);\n  }\n  \n  @UseGuards(AuthGuard('master') )\n  @Put('/:id')\n  async update(@Param('id') id: string, @Body() update: ImovelDto) {\n      return await this.imovelService.update(id, update);\n  }\n\n  @UseGuards(AuthGuard('master'))\n  @Delete('/:id')\n  async delete(@Param('id') id: string) {\n      return await this.imovelService.delete(id);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImovelDto.html":{"url":"classes/ImovelDto.html","title":"class - ImovelDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImovelDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imoveis/imovel.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                area\n                            \n                            \n                                bairro\n                            \n                            \n                                cep\n                            \n                            \n                                    Optional\n                                complemento\n                            \n                            \n                                created_at\n                            \n                            \n                                descricao\n                            \n                            \n                                localidade\n                            \n                            \n                                logradouro\n                            \n                            \n                                    Optional\n                                numero\n                            \n                            \n                                    Optional\n                                published_at\n                            \n                            \n                                status\n                            \n                            \n                                titulo\n                            \n                            \n                                uf\n                            \n                            \n                                updated_at\n                            \n                            \n                                valor\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            area\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bairro\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cep\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            complemento\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            descricao\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localidade\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logradouro\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            numero\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            published_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            titulo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/imoveis/imovel.dto.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateImovelDto {\n    titulo: string;\n    descricao: string;\n    valor: number;\n    area: number;\n    cep: number;\n    logradouro: string;\n    numero?: string;\n    complemento?: string;\n    bairro: string;\n    localidade: string;\n    uf: string;\n}\n\nexport class ImovelDto {\n    _id?: string;\n    titulo: string;\n    descricao: string;\n    valor: number;\n    area: number;\n    cep: number;\n    logradouro: string;\n    numero?: string;\n    complemento?: string;\n    bairro: string;\n    localidade: string;\n    uf: string;\n    created_at: string;\n    updated_at: string;\n    published_at?: string;\n    status: boolean;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImovelModule.html":{"url":"modules/ImovelModule.html","title":"module - ImovelModule","body":"\n                   \n\n\n\n\n    Modules\n    ImovelModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImovelModule\n\n\n\ncluster_ImovelModule_imports\n\n\n\ncluster_ImovelModule_exports\n\n\n\ncluster_ImovelModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nImovelModule\n\nImovelModule\n\nImovelModule -->\n\nDatabaseModule->ImovelModule\n\n\n\n\n\nImovelService \n\nImovelService \n\nImovelService  -->\n\nImovelModule->ImovelService \n\n\n\n\n\nImovelService\n\nImovelService\n\nImovelModule -->\n\nImovelService->ImovelModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/imoveis/imovel.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ImovelService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ImovelController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImovelService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ImovelController } from './imovel.controller';\nimport { ImovelService } from './imovel.service';\nimport { DatabaseModule } from '../database/database.module';\nimport { imovelProviders } from './imovel.providers';\n\n@Module({\n  imports: [DatabaseModule],\n  exports: [ImovelService],\n  controllers: [ImovelController],\n  providers: [ImovelService, ...imovelProviders]\n})\nexport class ImovelModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImovelService.html":{"url":"injectables/ImovelService.html","title":"injectable - ImovelService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ImovelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/imoveis/imovel.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                all\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(imovelModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/imoveis/imovel.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        imovelModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            all\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    all()\n                \n            \n\n\n            \n                \n                    Defined in src/imoveis/imovel.service.ts:22\n                \n            \n\n\n            \n                \n                    Método para retornar todos os imóveis\n\n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createImovelDto: CreateImovelDto)\n                \n            \n\n\n            \n                \n                    Defined in src/imoveis/imovel.service.ts:15\n                \n            \n\n\n            \n                \n                    Método para criar um imóvel\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createImovelDto\n                                    \n                                                CreateImovelDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/imoveis/imovel.service.ts:39\n                \n            \n\n\n            \n                \n                    Método para deletar um imóvel por ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/imoveis/imovel.service.ts:46\n                \n            \n\n\n            \n                \n                    Método para retornar um imóvel por ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, imovelDto: ImovelDto)\n                \n            \n\n\n            \n                \n                    Defined in src/imoveis/imovel.service.ts:29\n                \n            \n\n\n            \n                \n                    Método para atualizar um imóvel por ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    imovelDto\n                                    \n                                                ImovelDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Imovel } from './imovel.interface';\nimport { Model } from 'mongoose';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { CreateImovelDto, ImovelDto } from './imovel.dto';\n\n@Injectable()\nexport class ImovelService {\n\n    constructor(@Inject('IMOVEL_MODEL') private readonly imovelModel: Model) { }\n\n\n    /**\n     * Método para criar um imóvel\n     */\n    async create(createImovelDto: CreateImovelDto) {\n            return await new this.imovelModel(createImovelDto).save();\n    }\n\n    /**\n     * Método para retornar todos os imóveis\n     */    \n    async all(): Promise {\n        return await this.imovelModel.find().lean().exec();\n    }\n\n    /**\n     * Método para atualizar um imóvel por ID\n     */\n    async update(id: string, imovelDto: ImovelDto): Promise {\n        return await this.imovelModel.findByIdAndUpdate(id,\n            { $set: imovelDto },\n            { new: true, useFindAndModify: false }\n        );\n    }\n\n    /**\n     * Método para deletar um imóvel por ID\n     */    \n    async delete(id: string): Promise {\n        return await this.imovelModel.findByIdAndDelete(id).exec();\n    }\n\n    /**\n     * Método para retornar um imóvel por ID\n     */\n    async get(id: string): Promise {\n        return await this.imovelModel.findById(id).lean().exec();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.dto.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginUserDto {\n    readonly email: string;\n    readonly password: string;\n}\n\nexport class CreateUserDto {\n    login: string;\n    name: string;\n    email: string;\n    password: string;\n    isMaster: boolean;\n}\n\nexport class Users {\n    login: string;\n    name: string;\n    email: string;    \n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MasterStrategy.html":{"url":"injectables/MasterStrategy.html","title":"injectable - MasterStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MasterStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/master.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/master.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/master.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class MasterStrategy extends PassportStrategy(Strategy, 'master') {\n\n    constructor(private authService: AuthService) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: process.env.MASTER_SECRET,\n        });\n    }\n\n    async validate(payload: any) {\n        const user = await this.authService.validateUserByJwt(payload);\n        if (!user) {\n            throw new UnauthorizedException();\n        }\n        return user;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        email\n                                \n                                \n                                        isMaster\n                                \n                                \n                                        login\n                                \n                                \n                                        name\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isMaster\n                                    \n                                \n                                \n                                    \n                                        isMaster:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\n\nexport interface User extends Document {\n    _id: string;\n    login: string;\n    name: string;\n    email: string;\n    password: string;\n    isMaster: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(create: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Post()\n                \n            \n\n            \n                \n                    Defined in src/users/user.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    create\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/users/user.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(req, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/users/user.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(req, id: string, update: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Put('/:id')\n                \n            \n\n            \n                \n                    Defined in src/users/user.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    update\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { User } from './user.interface';\nimport { CreateUserDto } from './user.dto';\nimport { UserService } from './user.service';\nimport { Body, Controller, Delete, Get, Param, Post, Put, Request, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @UseGuards(AuthGuard('master'))\n  @Post()\n  async create(@Body() create: CreateUserDto) {\n      return await this.userService.create(create);\n  }\n  \n  @UseGuards(AuthGuard(['default_user','master']) )\n  @Put('/:id')\n  async update(@Request() req, @Param('id') id: string, @Body() update: User) {\n      return (req.user._id == id || req.user.isMaster) ? await this.userService.update(id, update) : {};\n  }\n\n  @UseGuards(AuthGuard('master'))\n  @Delete('/:id')\n  async delete(@Param('id') id: string) {\n      return await this.userService.deleteById(id);\n  }\n\n  @UseGuards(AuthGuard(['default_user','master']))\n  @Get('/:id')\n  async get(@Request() req, @Param('id') id: string) {\n      return (req.user._id == id || req.user.isMaster) ? await this.userService.getById(id) : {};\n  }  \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { DatabaseModule } from '../database/database.module';\nimport { userProviders } from './user.providers';\n\n@Module({\n  imports: [DatabaseModule],\n  exports: [UserService],\n  controllers: [UserController],\n  providers: [UserService, ...userProviders]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createNewPasswordHash\n                            \n                            \n                                    Async\n                                deleteById\n                            \n                            \n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/users/user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/user.service.ts:15\n                \n            \n\n\n            \n                \n                    Método para criação de usuário\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNewPasswordHash\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewPasswordHash(pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/user.service.ts:65\n                \n            \n\n\n            \n                \n                    Método para encryptar senha\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/user.service.ts:50\n                \n            \n\n\n            \n                \n                    Método para deletar um usuário por ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/user.service.ts:31\n                \n            \n\n\n            \n                \n                    Método para buscar usuário por email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/user.service.ts:58\n                \n            \n\n\n            \n                \n                    Método para retornar um usuário por ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(userID: string, userDto: User)\n                \n            \n\n\n            \n                \n                    Defined in src/users/user.service.ts:38\n                \n            \n\n\n            \n                \n                    Método para atualizar um usuário por ID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userDto\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { User } from './user.interface';\nimport { Model } from 'mongoose';\nimport * as bcrypt from 'bcrypt';\nimport { HttpException, HttpStatus, Inject, Injectable } from '@nestjs/common';\nimport { CreateUserDto, Users } from './user.dto';\n\n@Injectable()\nexport class UserService {\n\n    constructor(@Inject('USER_MODEL') private readonly userModel: Model) { }\n\n    /**\n     * Método para criação de usuário\n     */\n    async create(createUserDto: CreateUserDto) {\n        if (await this.findOneByEmail(createUserDto.email)) {\n            throw new HttpException({\n                status: HttpStatus.FORBIDDEN,\n                error: 'Usuário/email já existe',\n            }, HttpStatus.FORBIDDEN);\n        } else {\n            createUserDto.password = await this.createNewPasswordHash(createUserDto.password);\n            return await new this.userModel(createUserDto).save();\n        }\n\n    }\n\n    /**\n     * Método para buscar usuário por email\n     */\n    async findOneByEmail(email: string): Promise {\n        return await this.userModel.findOne({ email }).lean().exec();\n    }\n\n    /**\n     * Método para atualizar um usuário por ID\n     */\n    async update(userID: string, userDto: User): Promise {\n        if (userDto.password) {\n            userDto.password = await this.createNewPasswordHash(userDto.password);\n        }\n        return await this.userModel.findByIdAndUpdate(userID, { $set: userDto }, {\n            new: true, useFindAndModify: false,\n        });\n    }\n\n    /**\n     * Método para deletar um usuário por ID\n     */\n    async deleteById(id: string): Promise {\n        return await this.userModel.findByIdAndDelete(id).exec();\n    }\n\n\n    /**\n     * Método para retornar um usuário por ID\n     */\n    async getById(userId: string): Promise {\n        return await this.userModel.findById(userId).lean().exec();\n    }\n\n    /**\n     * Método para encryptar senha\n     */\n    async createNewPasswordHash(pass: string) {\n        const salt = await bcrypt.genSalt(10);\n        return await bcrypt.hash(pass, salt);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Users.html":{"url":"classes/Users.html","title":"class - Users","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Users\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                login\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/user.dto.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginUserDto {\n    readonly email: string;\n    readonly password: string;\n}\n\nexport class CreateUserDto {\n    login: string;\n    name: string;\n    email: string;\n    password: string;\n    isMaster: boolean;\n}\n\nexport class Users {\n    login: string;\n    name: string;\n    email: string;    \n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            passportModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/auth/strategies/default.strategy.ts\n            \n            injectable\n            DefaultStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/master.strategy.ts\n            \n            injectable\n            MasterStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/database/database.providers.ts\n            \n            variable\n            databaseProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/imoveis/imovel.controller.ts\n            \n            controller\n            ImovelController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/imoveis/imovel.dto.ts\n            \n            class\n            CreateImovelDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/imoveis/imovel.dto.ts\n            \n            class\n            ImovelDto\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/imoveis/imovel.interface.ts\n            \n            interface\n            Imovel\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/imoveis/imovel.providers.ts\n            \n            variable\n            imovelProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/imoveis/imovel.schema.ts\n            \n            variable\n            ImovelSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/imoveis/imovel.service.ts\n            \n            injectable\n            ImovelService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/user.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/user.dto.ts\n            \n            class\n            Users\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/user.providers.ts\n            \n            variable\n            userProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/user.service.ts\n            \n            injectable\n            UserService\n            \n                75 %\n                (6/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/jwt : ^7.1.0\n        \n            @nestjs/mongoose : ^7.0.2\n        \n            @nestjs/passport : ^7.1.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/swagger : ^4.6.1\n        \n            @types/bcrypt : ^3.0.0\n        \n            @types/passport-jwt : ^3.0.3\n        \n            bcrypt : ^5.0.0\n        \n            mongoose : ^5.10.6\n        \n            nestjs-dotenv : ^1.2.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            swagger-ui-express : ^4.1.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nRequisitos de Sistema\n\nNode\nNpm\nDocker * (somente se não possuir o mongodb)\n\nInstalação NPM e Node\nsudo apt-get update\nsudo apt install npm\nsudo apt-get install git-core curl build-essential openssl libssl-dev\n\nsudo npm cache clean -f\nsudo npm install -g n\nsudo n latestInstalação Docker\nhttps://docs.docker.com/install/linux/docker-ce/ubuntu/\nsudo apt-get install  curl apt-transport-https ca-certificates software-properties-common\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\nsudo apt update\nsudo apt install docker-ce docker-ce-cli containerd.io docker-composeVisualizar documentação\nnpm run start:docConfigurações\n.env\n\nDEFAULT_SECRET é jwt secret para o User credentials\nMASTER_SECRET é jwt secret para o Master TokenMONGO_URL=mongodb://localhost:27018/opensapi\nMONGO_USER=root\nMONGO_PASS=opens\nMONGO_SCHEMA=admin\nDEFAULT_SECRET=opensapi_secret\nMASTER_SECRET=opensapi_master_secret\n\nExecutando\nExecute o docker-compose para criar as imagens e containers das imagens do MongoExpress e MongoDB:\nsudo docker-compose up -dTestar as conexões do MongoDB:\nmongo --port 27018 -u root -p opens -authenticationDatabase adminInsira o usuário master no sistema, responsável por criar e deletar usuários:\nuse opensapi\ndb.user.insert({\"isMaster\" : true, \"login\" : \"master\", \"name\" : \"master\", \"email\" : \"master@master.com\", \"password\" : \"$2b$10$TLQH.vtlYQUfVX8EhpfYhegZA2J6Q1VV6u3m.jj7oR../JlXjfppK\", \"__v\" : 0 })Finalmente, instale as dependências npm install e execute a aplicação npm run start e faça a autenticação em POST:http://localhost:3000/auth com body\n{ \n    \"email\":\"master@master.com\",\n    \"password: \"123456\"\n}Resgate o token retornado da autenticação e utilize nos endpoints com autenticação Bearer:\n\nPOST: http://localhost:3000/user  \n\nBODY:{\n\"login\":\"teste\",\n\"name\":\"teste\",\n\"email\":\"teste@teste.com\",\n\"password\":\"123456\"\n}\n\n\nDEL: http://localhost:3000/user/:id\n\nPara usuário simples, utilizar:\n\nPUT: http://localhost:3000/user/:id  \n\nBODY:{\n\"login\":\"testador\",\n\"name\":\"testador\",\n\"email\":\"teste@teste.com\",\n\"password\":\"123456\"\n}\n\n\nGET:http://localhost:3000/user/:id\n\nAcessar dados via MongoExpress\nTestar mongoExpress (usuario express, senha opens):\nhttp://localhost:8081Docker tests\nListando containers ativos\nsudo docker container lsParando container\nsudo docker stop Listando imagens docker\nsudo docker images -aRemovendo uma imagem docker\nsudo docker rmi  -f\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImovelModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ImovelModule\n\n\n\ncluster_ImovelModule_imports\n\n\n\ncluster_ImovelModule_exports\n\n\n\ncluster_ImovelModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nImovelModule\n\nImovelModule\n\nAppModule -->\n\nImovelModule->AppModule\n\n\n\n\n\nImovelService \n\nImovelService \n\nImovelService  -->\n\nImovelModule->ImovelService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nDefaultStrategy\n\nDefaultStrategy\n\nAuthModule -->\n\nDefaultStrategy->AuthModule\n\n\n\n\n\nMasterStrategy\n\nMasterStrategy\n\nAuthModule -->\n\nMasterStrategy->AuthModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nImovelModule -->\n\nDatabaseModule->ImovelModule\n\n\n\nUserModule -->\n\nDatabaseModule->UserModule\n\n\n\n\n\nImovelService\n\nImovelService\n\nImovelModule -->\n\nImovelService->ImovelModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            databaseProviders   (src/.../database.providers.ts)\n                        \n                        \n                            imovelProviders   (src/.../imovel.providers.ts)\n                        \n                        \n                            ImovelSchema   (src/.../imovel.schema.ts)\n                        \n                        \n                            passportModule   (src/.../auth.module.ts)\n                        \n                        \n                            userProviders   (src/.../user.providers.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/database/database.providers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            databaseProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: 'DATABASE_CONNECTION',\n    useFactory: async (): Promise => {\n      const dbOptions = {\n        useNewUrlParser: true,\n        useFindAndModify: false,\n        useUnifiedTopology: true,\n        authSource: process.env.MONGO_SCHEMA,  \n        bufferMaxEntries: 0,\n        bufferCommands: false,\n        autoIndex: false,\n        keepAlive: true,\n        keepAliveInitialDelay: 450000,\n        connectTimeoutMS: 30000,\n        user: process.env.MONGO_USER,\n        pass: process.env.MONGO_PASS,\n      };\n      return await mongoose.connect(process.env.MONGO_URL, dbOptions);\n    }\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/imoveis/imovel.providers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            imovelProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: 'IMOVEL_MODEL',\n    useFactory: (connection: Connection) => connection.model('imovel', ImovelSchema),\n    inject: ['DATABASE_CONNECTION'],\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/imoveis/imovel.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ImovelSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    titulo: {\n        type: String,\n        unique: true,\n        required: true\n    },    \n    descricao: {\n        type: String,\n        required: true\n    },    \n    valor: {\n        type: Number,\n        required: true\n    },\n    area: {\n        type: Number,\n        required: true\n    },\n    cep: {\n        type: Number,\n        required: true\n    },    \n    logradouro: {\n        type: String,\n        required: true\n    },    \n    numero: {\n        type: String,\n        required: false\n    },     \n    complemento: {\n        type: String,\n        required: false\n    },    \n    localidade: {\n        type: String,\n        required: true\n    },    \n    bairro: {\n        type: String,\n        required: true\n    },     \n    uf: {\n        type: String,\n        required: true\n    },              \n    status: {\n        type: Boolean,\n        required: true,\n        default: true\n    },    \n    created_at: {\n        type: Date,\n        default: Date.now\n    },\n    updated_at: {\n        type: Date,\n        default: Date.now\n    },    \n    published_at: {\n        type: Date\n    },    \n}, {\n    collection: 'imovel',\n})\n                        \n                    \n\n\n            \n        \n\n    src/auth/auth.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            passportModule\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : PassportModule.register({ defaultStrategy: 'default_user' })\n                        \n                    \n\n\n            \n        \n\n    src/users/user.providers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            userProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: 'USER_MODEL',\n    useFactory: (connection: Connection) => connection.model('user', UserSchema),\n    inject: ['DATABASE_CONNECTION'],\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    src/users/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    login: {\n        type: String,\n        unique: true,\n        required: true\n    },    \n    name: {\n        type: String,\n        required: true\n    },    \n    email: {\n        type: String,\n        unique: true,\n        required: true\n    },\n    password: {\n        type: String,\n        required: true\n    },\n    isMaster: {\n        type: Boolean,\n        required: true,\n        default: false\n    },    \n}, {\n    collection: 'user',\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
